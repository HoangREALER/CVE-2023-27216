#!/bin/sh

WAN_NAS_IF="nas+"
WAN_PPP_IF="ppp+"

iptables -t filter -F PRE_FW
iptables -t nat -F WAN_PASS
iptables -t nat -D PREROUTING -i $WAN_NAS_IF -j WAN_PASS
iptables -t nat -D PREROUTING -i $WAN_PPP_IF -j WAN_PASS
iptables -t nat -I PREROUTING -i $WAN_NAS_IF -j WAN_PASS
iptables -t nat -I PREROUTING -i $WAN_PPP_IF -j WAN_PASS
iptables -t filter -F SPI_FW
iptables -t filter -F DOS_FW
iptables -t filter -F DOS_TCP
iptables -t filter -F DOS_PIN

TYPES=$1
if [ -z "$TYPES" ]; then
#  echo "Firewall: no type"
  exit 0
fi

TMP=`echo $TYPES | sed -n '/0/p'`
if [ -n "$TMP" ]; then
  SPI_ATT="1"
else
  SPI_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/1/p'`
if [ -n "$TMP" ]; then
  DOS_ATT="1"
else
  DOS_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/2/p'`
if [ -n "$TMP" ]; then
  TCP_ATT="1"
else
  TCP_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/3/p'`
if [ -n "$TMP" ]; then
  RST_ATT="1"
else
  RST_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/4/p'`
if [ -n "$TMP" ]; then
  FIN_ATT="1"
else
  FIN_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/5/p'`
if [ -n "$TMP" ]; then
  PIN_ATT="1"
else
  PIN_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/6/p'`
if [ -n "$TMP" ]; then
  PSH_ATT="1"
else
  PSH_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/7/p'`
if [ -n "$TMP" ]; then
  XMS_ATT="1"
else
  XMS_ATT="0"
fi
TMP=`echo $TYPES | sed -n '/8/p'`
if [ -n "$TMP" ]; then
  NSC_ATT="1"
else
  NSC_ATT="0"
fi

iptables -t filter -A SPI -p ALL -i $WAN_NAS_IF -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -t filter -A SPI -p ALL -i $WAN_PPP_IF -m state --state ESTABLISHED,RELATED -j ACCEPT

if [ "$SPI_ATT" = "1" ]; then
  iptables -t filter -A PRE_FW -i $WAN_NAS_IF -j SPI_FW
  iptables -t filter -A PRE_FW -i $WAN_PPP_IF -j SPI_FW
  iptables -t filter -A SPI_FW -m state --state NEW,INVALID -j LOG --log-level debug --log-prefix ATT:SPI:
  iptables -t filter -A SPI_FW -m state --state NEW,INVALID -j DROP
  iptables -t filter -A SPI_FW -p icmp --icmp-type echo-request -j LOG --log-level debug --log-prefix ATT:SPI:
  iptables -t filter -A SPI_FW -p icmp --icmp-type echo-request -j DROP
fi
if [ "$DOS_ATT" = "1" ]; then
  iptables -t filter -A PRE_FW ! -i br+ -j DOS_FW
#  iptables -t filter -A PRE_FW -i br+ -j DOS_FW
fi
if [ "$TCP_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p tcp -j DOS_TCP
  iptables -t filter -A DOS_TCP -p tcp -m state --state NEW -m limit --limit 15/s --limit-burst 30 -j RETURN
  iptables -t filter -A DOS_TCP -p tcp -j LOG --log-level debug --log-prefix ATT:TCP:
  iptables -t filter -A DOS_TCP -p tcp -j DROP 
fi
if [ "$RST_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p tcp --tcp-flags SYN,RST SYN,RST -j LOG --log-level debug --log-prefix ATT:RST:
  iptables -t filter -A DOS_FW -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
fi
if [ "$FIN_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p tcp --tcp-flags SYN,FIN SYN,FIN -j LOG --log-level debug --log-prefix ATT:FIN:
  iptables -t filter -A DOS_FW -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
fi
if [ "$PIN_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p icmp -j DOS_PIN
  iptables -t filter -A DOS_PIN -p icmp --icmp-type echo-request -m limit --limit 10/s --limit-burst 50 -j RETURN
  iptables -t filter -A DOS_PIN -p icmp --icmp-type echo-reply -m limit --limit 10/s --limit-burst 50 -j RETURN
  iptables -t filter -A DOS_PIN -p icmp -j LOG --log-level debug --log-prefix ATT:PING:
  iptables -t filter -A DOS_PIN -p icmp -j DROP
fi
if [ "$PSH_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL FIN,URG,PSH -j LOG --log-level debug --log-prefix ATT:FinUrgPsh:
  iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
fi
if [ "$XMS_ATT" = "1" ]; then
 iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL ALL -j LOG --log-level debug --log-prefix ATT:Xmas:
  iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL ALL -j DROP
 iptables -t filter -A DOS_FW -p tcp ! --syn -m state --state NEW -j LOG --log-level debug --log-prefix ATT:Xmas:
  iptables -t filter -A DOS_FW -p tcp ! --syn -m state --state NEW -j DROP
fi
if [ "$NSC_ATT" = "1" ]; then
  iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL NONE -j LOG --log-level debug --log-prefix ATT:NullScan:
  iptables -t filter -A DOS_FW -p tcp --tcp-flags ALL NONE -j DROP
fi

