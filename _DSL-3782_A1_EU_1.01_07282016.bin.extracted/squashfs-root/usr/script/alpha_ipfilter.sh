#!/bin/sh

setIptableCmd()
{
iptables -t filter -A ipfilter_chain $D_INT $PROTOCOL $D_PORT $SRC $DST $TIME_ARG -j $TARGET
}

. /usr/script/alpha_fun_lib.sh

CONF=/tmp/etc/ipfilter.conf

if [ ! -f $CONF ]; then
#  echo "no conf"
  exit 0
fi

#Get mode
TMP=`sed -n 's/^.*mode=//gp' $CONF`
if [ -z "$TMP" ]; then
  exit 0
fi
MODE=$TMP
#echo "mode is $MODE"
case "$MODE" in
  "black")
    TARGET="DROP"
    ;;
  "white")
    TARGET="RETURN"
    ;;
  "disable")
    iptables -t filter -F ipfilter_chain
    exit 0
    ;;
  *)
    exit 0
esac

#Get number
TMP=`sed -n 's/^.*num=//gp' $CONF`
if [ -z "$TMP" ]; then
  exit 0
fi
NUM=$TMP
if [ "$NUM" -eq "0" ]; then
  iptables -t filter -F ipfilter_chain
  if [ "$MODE" = "white" ]; then
    iptables -t filter -A ipfilter_chain -j DROP
  fi
  exit 0
fi
#echo "num is $NUM"

#Clear iptable chain
iptables -t filter -F ipfilter_chain

#Get entry
i=0
while [ "$i" -lt "$NUM" ];do
#  echo "i $i"
  #Get protocol
  TMP=`sed -n "s/^.*protocol${i}=//gp" $CONF`
  if [ -z "$TMP" ]; then
    exit 0
  fi
  PROTOCOL=""
  if [ "$TMP" != "ANY" ]; then
    PROTOCOL=`echo "-p $TMP"`
  fi
#  echo "PROTOCOL is $PROTOCOL"

  #Get des port
  D_PORT=""
  if [ "$TMP" = "tcp" ] || [ "$TMP" = "udp" ]; then
    TMP=`sed -n "s/^.*dp_type${i}=//gp" $CONF`
    if [ -z "$TMP" ]; then
      exit 0
    fi
    if [ "$TMP" = "SINGLE" ]; then
      TMP=`sed -n "s/^.*dp_from${i}=//gp" $CONF`
      if [ -z "$TMP" ]; then
        exit 0
      fi
      D_PORT="--dport $TMP"
    elif [ "$TMP" = "RANGE" ]; then
      TMP=`sed -n "s/^.*dp_from${i}=//gp" $CONF`
      if [ -z "$TMP" ]; then
        exit 0
      fi
      DP_FROM=$TMP
      TMP=`sed -n "s/^.*dp_to${i}=//gp" $CONF`
      if [ -z "$TMP" ]; then
        exit 0
      fi
      D_PORT="--dport $DP_FROM:$TMP"
    fi
  fi
#  echo "D_PORT is $D_PORT"

  #Get src type
  TMP=`sed -n "s/^.*s_type${i}=//gp" $CONF`
  if [ -z "$TMP" ]; then
    exit 0
  fi
#  echo "src type $TMP"
  #Get src ip
  if [ "$TMP" = "ANY" ]; then
    SRC=""
  elif [ "$TMP" = "SINGLE" ]; then
    TMP=`sed -n "s/^.*sf_ip${i}=//gp" $CONF`
    if [ -z "$TMP" ]; then
      exit 0
    fi
    SRC="-s $TMP"
  elif [ "$TMP" = "RANGE" ]; then
    TMP=`sed -n "s/^.*sf_ip${i}=//gp" $CONF`
    if [ -z "$TMP" ]; then
      exit 0
    fi
    d_ip=`sed -n "s/^.*st_ip${i}=//gp" $CONF`
    if [ -z "$d_ip" ]; then
      exit 0
    fi
    SRC="-m iprange --src-range $TMP-$d_ip"
  else
    exit 0
  fi
#  echo "SRC is $SRC"
  #Get interface
  TMP=`sed -n "s/^.*d_int${i}=//gp" $CONF`
  if [ -z "$TMP" ]; then
    exit 0
  fi
  D_INT=`echo "-o $TMP"`
#  echo "D_INT $D_INT"
  #Get dst type
  TMP=`sed -n "s/^.*d_type${i}=//gp" $CONF`
  if [ -z "$TMP" ]; then
    exit 0
  fi
#  echo "dst type $TMP"
  #Get dst ip
  if [ "$TMP" = "ANY" ]; then
    DST=""
  elif [ "$TMP" = "SINGLE" ]; then
    TMP=`sed -n "s/^.*df_ip${i}=//gp" $CONF`
    if [ -z "$TMP" ]; then
      exit 0
    fi
    DST="-d $TMP"
  elif [ "$TMP" = "RANGE" ]; then
    TMP=`sed -n "s/^.*df_ip${i}=//gp" $CONF`
    if [ -z "$TMP" ]; then
      exit 0
    fi
    d_ip=`sed -n "s/^.*dt_ip${i}=//gp" $CONF`
    if [ -z "$d_ip" ]; then
      exit 0
    fi
    DST="-m iprange --dst-range $TMP-$d_ip"
  else
    exit 0
  fi
#  echo "DST is $DST"

 #Get time
#  TMP=`sed -n "s/^.*time_flag${i}=//gp" $CONF`
#  TIME_ARG=""
#  if [ "$TMP" -eq "1" ]; then
#    TMP=`sed -n "s/^.*start_time${i}=//gp" $CONF`
#    if [ -z "$TMP" ]; then
#      exit 0
#    fi
#    START=$TMP
#    TMP=`sed -n "s/^.*stop_time${i}=//gp" $CONF`
#    if [ -z "$TMP" ]; then
#      exit 0
#    fi
#    STOP=$TMP
#    TMP=`sed -n "s/^.*days${i}=//gp" $CONF`
#    if [ -z "$TMP" ]; then
#      exit 0
#    fi
#    DAYS=$TMP
#    TIME_ARG=`echo "-m time --timestart $START --timestop $STOP --days $DAYS"`
#  fi

#  iptables -t filter -A ipfilter_chain $D_INT $PROTOCOL $D_PORT $SRC $DST $TIME_ARG -j $TARGET

  #Get schedule
  SCH_NAME=`sed -n "s/SCH${i}=//gp" $CONF`
  if [ -n "$SCH_NAME" ]; then
    setIptableWithSch $SCH_NAME;
  else
    TIME_ARG=""
    setIptableCmd;
  fi

  i=`expr $i + 1`
done

if [ "$MODE" = "white" ]; then
  iptables -t filter -A ipfilter_chain -j DROP
fi
