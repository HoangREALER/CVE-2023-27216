<script>
// Connection Type lists
MuxTypeList=["", m_ConType1, m_ConType2, m_ConType3, m_ConType4, m_ConType5, m_ConType6, m_ConType7, m_ConType8, m_ConType9 ];

// Enable lists
EnableList=["", m_disable, m_enable];

// Enable lists
EnableList01=[m_disable, m_enable];


// Authentication lists
AuthList=[m_auto, m_pap, m_chap];

function WanSetting(mux_type,  //global setting
					mac_clone,  					//dynamic ip
					ip,netmask,			//static ip
					user,password,service_name,mtu,auth,on_demand,auto_dns, //pppoe/pppoa
					Aryfirewall,
					Arynat,
					Aryigmp,
					pptp_Enable,pptp_tunnel_name,pptp_remote_ip,pptp_domain_name,pptp_user_name,pptp_password
					//r_mac_clone
					)					//runtime info
{
	this.mux_type=mux_type;
	this.mac_clone=mac_clone;
	this.ip=ip;
	this.netmask=netmask;
	this.user=user;
	this.password=password;
	this.service_name=service_name;
	this.mtu=mtu;
	this.auth=auth;
	this.auto_dns=auto_dns;
	this.auto_dns=auto_dns;
	this.firewall=Aryfirewall;
	this.nat=Arynat;
	this.igmp=Aryigmp;
	this.pptp_Enable=pptp_Enable;
	this.pptp_tunnel_name=pptp_tunnel_name;
	this.pptp_remote_ip=pptp_remote_ip;
	this.pptp_domain_name=pptp_domain_name;
	this.pptp_user_name=pptp_user_name;
	this.pptp_password=pptp_password;
	
}

function generateSelectEnbableList(b,e,selected)
{
   var str=new String("");
   for (var i=b;i <= e;i++)
   {
       if (i==selected)
          str+="<option value="+i+" selected>"+EnableList[i]+"</option>";
       else
          str+="<option value="+i+">"+EnableList[i]+"</option>";
   }
   return str;
}
function generateSelectEnbableList01(b,e,selected)
{
   var str=new String("");
   for (var i=b;i <= e;i++)
   {
       if (i==selected)
          str+="<option value="+i+" selected>"+EnableList01[i]+"</option>";
       else
          str+="<option value="+i+">"+EnableList01[i]+"</option>";
   }
   return str;
}
function generateSelectDF(b,e,RoutePVC,num)
{
   var str=new String("");
   for (var i=b;i <= e;i++)
   {
       if ((RoutePVC-1)==num)
          str+="<option value="+i+" selected>"+EnableList01[i]+"</option>";
       else
          str+="<option value="+i+">"+EnableList01[i]+"</option>";
   }
   return str;
}

function generateSelectAuthList(b,e,selected)
{
   var str=new String("");
   for (var i=b;i <= e;i++)
   {
       if (i==selected)
          str+="<option value="+i+" selected>"+AuthList[i]+"</option>";
       else
          str+="<option value="+i+">"+AuthList[i]+"</option>";
   }
   return str;
}

function generateSelectMuxType(b,e,selected)
{
   var str=new String("");
   
   for (var i=b;i <= e;i++)
   {
       if (i==selected)
          str+="<option value="+i+" selected>"+MuxTypeList[i]+"</option>";
       else
          str+="<option value="+i+">"+MuxTypeList[i]+"</option>";
   }   
   return str;
}

function generateMacClone(mac_clone)
{
   var str=new String("");
   if(mac_clone == undefined || mac_clone == "")
   {
   		for (var i=1;i <= 6;i++)
	   {
	       if (i==1)
	          str+="<INPUT maxLength=2 size=2 name=lan_mac_address"+i+" id=lan_mac_address"+i+">";
	       else
	          str+="<FONT face=Arial size=3>:</FONT><INPUT maxLength=2 size=2 name=lan_mac_address"+i+" id=lan_mac_address"+i+">";
	   }
   }
   else
   {
	   mac=mac_clone.split(":");
	   for (var i=1;i <= 6;i++)
	   {
	       if (i==1)
	          str+="<INPUT maxLength=2 size=2 name=lan_mac_address"+i+" id=lan_mac_address"+i+" value="+mac[i-1]+">";
	       else
	          str+="<FONT face=Arial size=3>:</FONT><INPUT maxLength=2 size=2 name=lan_mac_address"+i+" id=lan_mac_address"+i+" value="+mac[i-1]+">";
	   }
	}
   return str;
}
function uiSelectDefaultRoute(arg)
{
	arg=parseInt(arg);
	
	if(arg == 0)
	{
		document.forms[0].default_route.disabled=true;
		document.forms[0].gateway.disabled=true;	
	}
	else
	{
		document.forms[0].default_route.disabled=false;
		uiSelect(document.forms[0].default_route.value);
	}
}
function uiSelect(arg)
{
	arg=parseInt(arg);
	
	if(arg == 1)
		document.forms[0].gateway.disabled=true;
	else
		document.forms[0].gateway.disabled=false;
}
function uiSelectMuxType(arg)
{
	if(arg == 8 ||  arg == 9)
		DisplayHide('showSrvName');
	else
		DisplayShow('showSrvName',"tr");
}
function generateHTML(myPvc,myPage,myWanSetting)
{
   var i=myPvc;
   var f=document.frm;
   var str=new String("");
   switch (parseInt(myPage))
   {
     case 1:
		str+="<h2>Dynamic IP</h2>";
		str+="<table cellpadding=1 cellspacing=1 border=0 width=525>";
		if(i != 8)
        {
    		str+="<TR>";
    		str+="<TD class=r_tb width=200>Connection Type :</TD>";
    		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=mux_type id=mux_type>"+generateSelectMuxType(1,2,parseInt(myWanSetting.mux_type[i]))+"</SELECT></TD></TR>";
	    }
		str+="<TR>";
		str+="<TD class=r_tb width=200>MAC Address :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;"+generateMacClone(myWanSetting.mac_clone[i])+"</TD></TR>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200></TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT onclick=clone() type=button value=\"Clone MAC Address\" name=clone_mac_addr></TD></TR>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>Firewall :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=firewall id=firewall>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.firewall[i]))+"</SELECT></TD></TR>";	
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>NAT :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=nat id=nat>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.nat[i]))+"</SELECT></TD></TR>";	
        str+="<TR>";
		str+="<TD class=r_tb width=200>IGMP :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=igmp id=igmp>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.igmp[i]))+"</SELECT></TD></TR>";	
		str+="<TR>";
		str+="<TD class=r_tb width=200>Default Route :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=DefaultRouteState id=DefaultRouteState>"+generateSelectDF(0,1,parseInt(DefaultRouteNum),i)+"</SELECT></TD></TR>";
		/*
		str+="<TR>";
		str+="<TD class=r_tb width=200>Obtain gateway automatically :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT onchange=uiSelect(value) name=default_route id=default_route>"+generateSelectEnbableList01(0,1,parseInt(DefaultRoute))+"</SELECT></TD></TR>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>Default Gateway :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=17 name=gateway id=gateway value="+gateway+"></TD></TR>";
		*/
		str+="<TR>";
		str+="<TD class=l_tb colspan=2><b>"+m_dsc2+"</b></TD>";
		str+="</TR>";
		str+="</TABLE>";
				
		break;
	case 2:
        str+="<h2>Static IP</h2>";
		str+="<table cellpadding=1 cellspacing=1 border=0 width=525>";
        if(i != 8)
        {
            str+="<TR>";
            str+="<TD class=r_tb width=200>Connection Type :</TD>";
            str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=mux_type id=mux_type>"+generateSelectMuxType(1,4,parseInt(myWanSetting.mux_type[i]))+"</SELECT></TD></TR>";
        }
		str+="<TR>";
		str+="<TD class=r_tb width=200>IP Address :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=17 name=ip id=ip value="+myWanSetting.ip[i]+"> <b>";
		str+=m_assign+"</b></TD></TR>";

		str+="<TR>";
		str+="<TD class=r_tb width=200>Subnet Mask :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=17 name=netmask id=netmask value="+myWanSetting.netmask[i]+"></TD></TR>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>Firewall :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=firewall id=firewall>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.firewall[i]))+"</SELECT></TD></TR>";	
      
		str+="<TR>";
		str+="<TD class=r_tb width=200>NAT :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=nat id=nat>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.nat[i]))+"</SELECT></TD></TR>";	      
        str+="<TR>";
		str+="<TD class=r_tb width=200>IGMP :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=gmp id=igmp>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.igmp[i]))+"</SELECT></TD></TR>";	
        str+="<TR>";
        str+="<TR>";
		str+="<TD class=r_tb width=200>Default Route :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=DefaultRouteState id=DefaultRouteState onchange=uiSelectDefaultRoute(value)>"+generateSelectDF(0,1,parseInt(DefaultRouteNum),i)+"</SELECT></TD></TR>";
        str+="<TD class=r_tb width=200>Obtain gateway automatically :</TD>";
        str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT onchange=uiSelect(value) name=default_route id=default_route>"+generateSelectEnbableList01(0,1,parseInt(DefaultRoute))+"</SELECT></TD></TR>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>Default Gateway :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=17 name=gateway id=gateway value="+gateway+"></TD></TR>";
		
		str+="<TR>";
		str+="<TD width=100% colspan=2><b>"+m_dsc2+"</b></TD>";
		str+="</TR>";
		str+="</TABLE>";
		break;
	case 3:
        if(i == 8)
            str+="<h2>PPPoE</h2>";
        else
            str+="<h2>PPPoE/PPPoA</h2>";
		str+="<table cellpadding=1 cellspacing=1 border=0 width=525>";
		
		str+="<TR>";
		str+="<TD class=r_tb width=200>User Name :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=127 size=32 name=user id=user></TD></TR>";

		str+="<TR>";
		str+="<TD class=r_tb width=200>Password :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT type=password maxLength=127 size=32 name=password id=password></TD></TR>";

		str+="<TR id=showSrvName>";
		str+="<TD class=r_tb width=200>Service Name :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=31 size=32 name=service_name id=service_name></TD></TR>";

        if(i != 8)
        {
            str+="<TR>";
            str+="<TD class=r_tb width=200>Connection Type :</TD>";
            str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=mux_type id=mux_type onchange=uiSelectMuxType(value) >"+generateSelectMuxType(6,9,parseInt(myWanSetting.mux_type[i]))+"</SELECT></TD></TR>";
        }
		str+="<TR>";
		str+="<TD class=r_tb width=200>MTU :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT size=10 name=mtu id=mtu value="+myWanSetting.mtu[i]+"></TD></TR>";

        str+="<TR>";
        str+="<TD class=r_tb width=200>Authentication :</TD>";
        str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=auth id=auth>"+generateSelectAuthList(0,2,parseInt(myWanSetting.auth[i]))+"</SELECT></TD></TR>";

        str+="<!--TR>";
        str+="<TD class=r_tb width=200>Obtain DNS Automatically :</TD>";
        str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=auto_dns id=auto_dns>"+generateSelectEnbableList(1,2,parseInt(myWanSetting.auto_dns[i]))+"</SELECT></TD></TR-->";

		str+="<TR>";
		str+="<TD class=r_tb width=200>Firewall :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=firewall id=firewall>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.firewall[i]))+"</SELECT></TD></TR>";	
		
        str+="<TR>";
		str+="<TD class=r_tb width=200>NAT :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=nat id=nat>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.nat[i]))+"</SELECT></TD></TR>";	
        str+="<TR>";
		str+="<TD class=r_tb width=200>IGMP :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=igmp id=igmp>"+generateSelectEnbableList01(0,1,parseInt(myWanSetting.igmp[i]))+"</SELECT></TD></TR>";	
		str+="<TR>";
		str+="<TD class=r_tb width=200>Default Route :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=DefaultRouteState id=DefaultRouteState>"+generateSelectDF(0,1,parseInt(DefaultRouteNum),i)+"</SELECT></TD></TR>";		
		str+="</table>";
		break;		
	case 4:
        str+="<h2>Bridge Mode</h2>";
		str+="<table cellpadding=1 cellspacing=1 border=0 width=525>";	
        str+="<TR>";
        str+="<TD class=r_tb width=200>Connection Type :</TD>";
        str+="<TD class=l_tb>&nbsp;&nbsp;<SELECT name=mux_type id=mux_type>"+generateSelectMuxType(1,2,parseInt(myWanSetting.mux_type[i]))+"</SELECT></TD></TR>";
        str+="</table>";
		break;
   }
   

   return str;
}

function generatePPTPHTML(myPvc,myPage,myWanSetting)
{
   var i=myPvc;
   var f=document.frm;
   var str=new String("");
   switch (parseInt(myPage))
   {
     case 1:
     case 2:
     case 3:
		str+="<div class=box><h2>PPTP</h2>";
		str+="<table cellpadding=1 cellspacing=1 border=0 width=525>";
		str+="<TR>";
		str+="<TD class=r_tb width=200>Enable :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<input type=checkbox name=pptp_Enable border=0 onclick=uiDoEnable()></TD></TR>";		
		str+="<TR>";
		str+="<TD class=r_tb width=200>Tunnel Name :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=64 size=17 name=tunnel_name id=tunnel_name></TD></TR>";		
		str+="<TR>";
		str+="<TD class=r_tb width=200>PPTP Server IP Address :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=17 name=remote_ip id=remote_ip value="+myWanSetting.pptp_remote_ip+"></TD></TR>";
		str+="<TR>";
		str+="<TD class=r_tb width=200>UserName :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=64 size=17 name=user_name id=user_name></TD></TR>";
		str+="<TR>";
		str+="<TD class=r_tb width=200>Password :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT type=password maxLength=64 size=17 name=pptp_password id=pptp_password></TD></TR>";
		str+="<TR>";
		str+="<TD class=r_tb width=200>Domain Name :</TD>";
		str+="<TD class=l_tb>&nbsp;&nbsp;<INPUT maxLength=64 size=17 name=domain_name id=domain_name></TD></TR>";
		str+="</table></DIV>";
		break;
		
	case 4:
	    str+="";
		break;
   }
   return str;
}
</script>