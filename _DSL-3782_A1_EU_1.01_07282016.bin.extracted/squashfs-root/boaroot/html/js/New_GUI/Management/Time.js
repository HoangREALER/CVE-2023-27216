function getDaylightStatus(){
	$.getJSON("/cgi-bin/get/New_GUI/TimeDaylight.asp", function(data){
		
		if(data.DaylightStatus == "Enable")
		{
			SetCheckBoxEnable("uiViewdateDS", true, true);
		}
		else if(data.DaylightStatus == "Disable")
		{
			SetCheckBoxEnable("uiViewdateDS", true, false);
		}
		else
		{
			SetCheckBoxEnable("uiViewdateDS", true, false);
		}
	});	
}
function doTimeChange(tmp) {	
	$("#ToolsTimeSetFlag").val(1);
	if(parseInt(tmp) == 0)
		$("#uiCurrentTime1").val(decodeSpecialChr(cur_time));

    	return;
}

function isAsciiString(s) {
    var len= s.length;
    var ch;

    if(len == 0)
        return false;
    for( i=0; i< len; i++) {
       ch= s.charCodeAt(i);
       if(ch > 0x39 || ch < 0x30)
          return false;
    }
    return true;
}

function uiComputerTimeOnLoad() {
	var smtmp;
	if($("#uiRadioValue").val() != null ){
		smtmp = $("#uiRadioValue").val();
	}
	else{
		return;
	}
	if(smtmp=="1"){
		syncwithpc();
	}
	else
		return;
}

function syncwithpc() {
	theDate=(new Date()).getDate();
	$("#uiwPCdateDay").val(theDate);

	theMonth=(new Date()).getMonth();
	$("#uiwPCdateMonth").val(theMonth);

	theYear=(new Date()).getFullYear();
	$("#uiwPCdateYear").val(theYear);

	theHour=(new Date()).getHours();
	$("#uiwPCdateHour").val(theHour);

	theMinute=(new Date()).getMinutes();
	$("#uiwPCdateMinute").val(theMinute);

	theSec=(new Date()).getSeconds();
	$("#uiwPCdateSec").val(theSec);

	$("#ToolsTimeSetFlag").val(1);
	uiShowNow();
}

function isValidIpAddr(ip1,ip2,ip3,ip4) {
	if(ip1==0 || ip4==0 || ip4==255 || ip1==127)
		return false;
	return true;
}

function isUnsafeChar(cmpStr)
	{
		var regStr=/[a-zA-Z0-9]/;
	  	for(i=0;i<cmpStr.length;i++)
	  	{ 
	  		if(cmpStr.charAt(i) == '.')
				continue;
			if (cmpStr.charAt(i).search(regStr)==-1) //contain the unsafe char
				return false;
		}
		return true;	
	}

function uiTimeSave() 
{
	var value;
	var timestring;
	var form=document.Alpha_Time;

	$("label[class='error']").html("");

	if(document.getElementById('uiViewSyncWith2').getAttribute('class') == 'clicked')
	{
		$("#uiViewSyncWith").val("2");
		day = $("#uiPCdateDay").val();
		value = parseInt(day);
		if(isNaN(value))
		{
			document.getElementById("date_error").innerHTML = m_time_error1;	
			return false;
		}
		month = $("#uiPCdateMonth").val();
		value = parseInt(month);
		if(isNaN(value))
		{
			document.getElementById("date_error").innerHTML = m_time_error2;	
			return false;
		}
		year = $("#uiPCdateYear").val();
		value = parseInt(year);
		if(isNaN(value) || value > 2036 || value < 1970)
		{
			document.getElementById("date_error").innerHTML = m_time_error3;	
			return false;
		}		
		if (!((1<=month) && (12>=month) && (31>=day) && (1<=day)) )
		{
			document.getElementById("date_error").innerHTML = m_time_error1;	
			return false;
		}
		if (!((year % 4)==0) && (month==2) && (day==29))
		{
			document.getElementById("date_error").innerHTML = m_time_error4;	
			return false;
		}
		if ((month<=7) && ((month % 2)==0) && (day>=31))
		{
			document.getElementById("date_error").innerHTML = m_time_error5;	
			return false;		
		}
		if ((month>=8) && ((month % 2)==1) && (day>=31))
		{
			document.getElementById("date_error").innerHTML = m_time_error5;	
			return false;
		}
		if ((month==2) && (day==30))
		{
			document.getElementById("date_error").innerHTML = m_time_error6;	
			return false;
		}
		
		hour = $("#uiPCdateHour").val();
		value = parseInt(hour);
		if(isNaN(value) || value >23 || value <0)
		{
			document.getElementById("time_error").innerHTML = m_time_error7;	
			return false;
		}
		min = $("#uiPCdateMinute").val();
		value = parseInt(min);
		if(isNaN(value) || value >59 || value <0)
		{
			document.getElementById("time_error").innerHTML = m_time_error8;	
			return false;
		}
		sec = $("#uiPCdateSec").val();
		value = parseInt(sec);
		if(isNaN(value) || value >59 || value <0)
		{
			document.getElementById("time_error").innerHTML = m_time_error9;	
			return false;
		}
		//timestring=year+"/"+month+"/"+day+" "+hour+":"+min+":"+sec;
		timestring=year+"/:"+month+"/:"+day+"/:"+hour+"/:"+min+"/:"+sec;		
		$("#uiCurrentTime").val(timestring);
	}
	else if (document.getElementById('uiViewSyncWith0').getAttribute('class') == 'clicked')
	{
		$("#uiViewSyncWith").val("0");
		if($("#uiViewdateDS_ck").attr("checked"))
			$("#uiViewdateDSValue").val("Enable");
		else
			$("#uiViewdateDSValue").val("Disable");
		
		value = $("#uiViewSNTPServer").val();
		if(value == "")
		{
			document.getElementById("uiViewSNTPServer_error").innerHTML = "<br/>"+m_time_error10;			
			return;
		}

		if(!doValidateDomain(form.uiViewSNTPServer))		
		{
			document.getElementById("uiViewSNTPServer_error").innerHTML = "<br/>"+m_time_error11;			
			return false;
		}
		/*if(!isUnsafeChar($("#uiViewSNTPServer").val())) {
			$("#uiViewSNTPServer_error").html("<br/>NTP SERVER include unsafe char!");
			return false;
		}*/
	}
	else if (document.getElementById('uiViewSyncWith1').getAttribute('class') == 'clicked')
	{
		$("#uiViewSyncWith").val("1");
		syncwithpc();
	}

	$("#SaveTime").val(1);

	document.getElementById("CreatePopAlertMessage").style.display = "inline";
	document.getElementById("waitSettingFinish").style.display = "inline";
	Start_reciprocal_Number_RestoreConfiguration();
	
	$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey){
		$("#sessionKey").val(sessionKey);	
		setTimeout('$.post("/cgi-bin/New_GUI/Time.asp", $("form").serialize(), function(){save_flag = true;});', 300);
	});			
}

function uiShowNow() {
	if(document.getElementById('uiViewSyncWith1').getAttribute('class') == 'clicked')
	{ 
		var weekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
		var  now  =  new  Date();
		var  hh  =  now.getHours();  
		var  mm  =  now.getMinutes();  
		var  ss  =  now.getTime()  %  60000;  
		ss  =  (ss  -  (ss  %  1000))  /  1000;  
		var  clock  =  hh+'/:';  
		var displayClock = hh+':'; 
		if  (mm  <  10)  {
			clock  +=  '0';
			displayClock  +=  '0';
		}			 
		clock  +=  mm+'/:';  
		displayClock  +=  mm+':';
		if  (ss  <  10)  {
			clock  +=  '0'; 
			displayClock  +=  '0';
		}
		clock  +=  ss; 
		displayClock  +=  ss;
			
		$("#uiCurrentTime").val(now.getFullYear() + "/:" +(now.getMonth()+1) + "/:" + now.getDate() + "/:" +   clock);		
		$("#uiCurrentTime1").val(weekday[now.getDay()] + " " + now.getDate() + "/" + (now.getMonth()+1) + "/" + now.getFullYear() + " " + displayClock);
	}
	else
	{
		$("#uiCurrentTime1").val(decodeSpecialChr(cur_time));		
	}
}

function doDisplay(tmp)
{
	if(parseInt(tmp) == 0)
	{
		uiViewSyncWith0.setAttribute("class", "clicked");
		uiViewSyncWith1.setAttribute("class", "unclick");
		uiViewSyncWith2.setAttribute("class", "unclick");
		setDisplay('timezone_ntp_div0',1);
		setDisplay('timezone_manual_div2',0);	
		getDaylightStatus();
	}
	else if(parseInt(tmp) == 1)
	{
		uiViewSyncWith0.setAttribute("class", "unclick");
		uiViewSyncWith1.setAttribute("class", "clicked");
		uiViewSyncWith2.setAttribute("class", "unclick");
		setDisplay('timezone_ntp_div0',0);
		setDisplay('timezone_manual_div2',0);
	}
	else if(parseInt(tmp) == 2)
	{
		uiViewSyncWith0.setAttribute("class", "unclick");
		uiViewSyncWith1.setAttribute("class", "unclick");
		uiViewSyncWith2.setAttribute("class", "clicked");
		setDisplay('timezone_ntp_div0',0);
		setDisplay('timezone_manual_div2',1);	
	}	
}
function startRefeshForNtp()
{
	var str1="N/A (NTP server is connecting)";
	var str2="N/A (Can't find NTP server)";
	var str3=$("#uiCurrentTime1").val();
	
	setTimeout("startRefeshForNtp()",10000);
	
	if( !(document.getElementById('uiViewSyncWith0').getAttribute('class') == 'clicked') || (document.Alpha_Time.uiTimezoneType.value != "0") )
		return ;

	if(str1 == str3 || str2 == str3)
		document.location.href="Time.asp";
}
function setDisplay (sId, sh)
{
    var status;
    if (sh > 0) 
    {
        status = "";
    }
    else 
    {
        status = "none";
    }
    getElement(sId).style.display = status;
}
function getElementById(sId)
{
	if (document.getElementById)
	{
		return document.getElementById(sId);	
	}
	else if (document.all)
	{
		// old IE
		return document.all(sId);
	}
	else if (document.layers)
	{
		// Netscape 4
		return document.layers[sId];
	}
	else
	{
		return null;
	}
}

/*getElByName*/
function getElementByName(sId)
{    // standard
	if (document.getElementsByName)
	{
		var element = document.getElementsByName(sId);
		
		if (element.length == 0)
		{
			return null;
		}
		else if (element.length == 1)
		{
			return 	element[0];
		}
		
		return element;		
	}
}
function getElement(sId)
{
	var ele = getElementByName(sId);
	if (ele == null)
	{
		return getElementById(sId);
	}
	return ele;
}

function ChangeDaylight(){
	SetCheckBoxEnable("uiViewdateDS");
}

var save_flag = false;
var _ReciprocalNumber = 10;
function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + m_comm_Sec;
		_ReciprocalNumber --;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if(save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}
