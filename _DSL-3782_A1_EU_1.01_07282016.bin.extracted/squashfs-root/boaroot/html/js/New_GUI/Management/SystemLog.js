function save_cfg() {
	self.location.href = "/cgi-bin/get/New_GUI/SystemLogSave.cgi";
}

function cbxClick() {
	var f = document.getElementById("frm");

	if(f.cbxLogServerEnable_ck.checked)
		f.txtServerIp.disabled = false;
	else
		f.txtServerIp.disabled = true;
}

function uiDoSave() {
	var f = document.getElementById("frm");
	var saveFlag = true;

	if(f.cbxLogServerEnable_ck.checked) {
		if(isIPForAdsl(f.txtServerIp.value) == false) {
			document.getElementById("txtServerIp_error").innerHTML = "<br/>"+m_systmelog_error1;			
			f.txtServerIp.focus();
			f.txtServerIp.select();
			saveFlag = false;
		}
		else{
			document.getElementById("txtServerIp_error").innerHTML = "";
			saveFlag = true;
		}

		if (!is_valid_ip(f.txtServerIp.value,0)) {
			document.getElementById("txtServerIp_error").innerHTML = "<br/>"+m_systmelog_error1;	
			f.txtServerIp.focus();
			f.txtServerIp.select();
			saveFlag = false;
		}
		else{
			document.getElementById("txtServerIp_error").innerHTML = "";
			saveFlag = true;
		}
	}

	f.cllick_button.value = "apply";
	
	var logtypeValue = new String();
	if(f.cbxSystemInfo_ck.checked)
		logtypeValue += "s";
	if(f.cbxDebugInfo_ck.checked)
		logtypeValue += "d";
	if(f.cbxAttackInfo_ck.checked)
		logtypeValue += "a";
	/*
	if(f.cbxDropPacketInfo_ck.checked)
		logtypeValue += "p";
	*/
	if(f.cbxNoticeInfo_ck.checked)
		logtypeValue += "n";

	if(logtypeValue == "")
		logtypeValue = "off";
	f.LogType.value = logtypeValue;

	if(f.cbxLogServerEnable_ck.checked)
		f.LogServerEnable.value = 1;
	else
		f.LogServerEnable.value = 0;	

	if(saveFlag == true){
		document.getElementById("CreatePopAlertMessage").style.display = "inline";
		document.getElementById("waitSettingFinish").style.display = "inline";
		Start_reciprocal_Number_RestoreConfiguration();
		
		$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey){
			$("#sessionKey").val(sessionKey);	
			setTimeout('$.post("/cgi-bin/New_GUI/SystemLog.asp", $("form").serialize(), function(){save_flag = true;});', 300);
		});
	}	
}

function uiDoOnLoad() {
	var f = document.getElementById("frm");

	if(parseInt(SystemInfo) == 0)
		SetCheckBoxActivate("cbxSystemInfo", true, false);
	else
		SetCheckBoxActivate("cbxSystemInfo", true, true);

	if(parseInt(DebugInfo) == 0)
		SetCheckBoxActivate("cbxDebugInfo", true, false);
	else
		SetCheckBoxActivate("cbxDebugInfo", true, true);

	if(parseInt(AttackInfo) == 0)
		SetCheckBoxActivate("cbxAttackInfo", true, false);
	else
		SetCheckBoxActivate("cbxAttackInfo", true, true);

	/*
	if(parseInt(DropPacketInfo) == 0)
		SetCheckBoxActivate("cbxDropPacketInfo", true, false);
	else
		SetCheckBoxActivate("cbxDropPacketInfo", true, true);
	*/

	if(parseInt(NoticeInfo) == 0)
		SetCheckBoxActivate("cbxNoticeInfo", true, false);
	else
		SetCheckBoxActivate("cbxNoticeInfo", true, true);

	if(parseInt(LogServerEnable) == 0) {
		SetCheckBoxActivate("cbxLogServerEnable", true, false);
		f.txtServerIp.disabled = true;
	} else {
		SetCheckBoxActivate("cbxLogServerEnable", true, true);
		f.txtServerIp.disabled = false;
	}

	f.txtServerIp.value = LogServer;
	
}

function doClear() {
	var f = document.getElementById("frm");
	f.cllick_button.value = "clear";
	f.submit();
}

function changeSystem(){
	SetCheckBoxActivate("cbxSystemInfo");
}

function changeDebug(){
	SetCheckBoxActivate("cbxDebugInfo");
}

function changeAttacks(){
	SetCheckBoxActivate("cbxAttackInfo");
}

/*
function changeDropped(){
	SetCheckBoxActivate("cbxDropPacketInfo");
}
*/

function changeNotice(){
	SetCheckBoxActivate("cbxNoticeInfo");
}

function changeLog(){
	SetCheckBoxActivate("cbxLogServerEnable");
}

var save_flag = false;
var _ReciprocalNumber = 10;
function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + m_comm_Sec;
		_ReciprocalNumber --;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if(save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}
