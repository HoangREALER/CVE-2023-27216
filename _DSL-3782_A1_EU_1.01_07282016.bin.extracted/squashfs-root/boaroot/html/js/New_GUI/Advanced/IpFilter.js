var max_length = 8;
var maxRule = 16;
var ipFilterList = new Array();
var ipFilterListsCount = 0

CountIPFilter();

function CountIPFilter() {
	for (var i = 0; i < maxRule; i++) {
		var ipFilter_name = eval("ipfilter" + i + "_name");
		if (ipFilter_name != "N/A") {
			var ipFilter_protocol = eval("ipfilter" + i + "_protocol");
			if (ipFilter_protocol == "N/A")
				ipFilter_protocol = "";
			var ipFilter_sip_type = eval("ipfilter" + i + "_sip_type");
			if (ipFilter_sip_type == "N/A")
				ipFilter_sip_type = "ANY";
			var ipFilter_sip_from = eval("ipfilter" + i + "_sip_from");
			if (ipFilter_sip_from == "N/A" || ipFilter_sip_from == "0")
				ipFilter_sip_from = "";
			var ipFilter_sip_to = eval("ipfilter" + i + "_sip_to");
			if (ipFilter_sip_to == "N/A" || ipFilter_sip_to == "0")
				ipFilter_sip_to = "";
			var ipFilter_interface = eval("ipfilter" + i + "_interface");
			if (ipFilter_interface == "N/A")
				ipFilter_interface = "";
			var ipFilter_dip_type = eval("ipfilter" + i + "_dip_type");
			if (ipFilter_dip_type == "N/A")
				ipFilter_dip_type = "ANY";
			var ipFilter_dip_from = eval("ipfilter" + i + "_dip_from");
			if (ipFilter_dip_from == "N/A" || ipFilter_dip_from == "0")
				ipFilter_dip_from = "";
			var ipFilter_dip_to = eval("ipfilter" + i + "_dip_to");
			if (ipFilter_dip_to == "N/A" || ipFilter_dip_to == "0")
				ipFilter_dip_to = "";

			var ipFilter_dport_type = eval("ipfilter" + i + "_dport_type");
			if (ipFilter_dport_type == "N/A")
				ipFilter_dport_type = "ANY";
			var ipFilter_dport_from = eval("ipfilter" + i + "_dport_from");
			if (ipFilter_dport_from == "N/A")
				ipFilter_dport_from = "";
			var ipFilter_dport_to = eval("ipfilter" + i + "_dport_to");
			if (ipFilter_dport_to == "N/A")
				ipFilter_dport_to = "";

			var ipFilter_schedule = eval("ipfilter" + i + "_schedule");
			if (ipFilter_schedule == "N/A")
				ipFilter_schedule = "";

			ipFilterList.push([ipFilter_name, ipFilter_protocol, ipFilter_sip_type, ipFilter_sip_from, ipFilter_sip_to, ipFilter_interface, ipFilter_dip_type, ipFilter_dip_from, ipFilter_dip_to, ipFilter_dport_type, ipFilter_dport_from, ipFilter_dport_to, ipFilter_schedule]);
			ipFilterListsCount++;
		} else {
			ipFilterList.push(["", "", "", "", "", "", "", "", "", "", "", "", ""]);
		}
	}
}

var maxScheduleRule = 10;
var ScheduleCount = 0;
var ScheduleList = new Array();
CountSchedule();

function CountSchedule() {
	for (var i = 0; i < maxScheduleRule; i++) {
		var port_name = eval("port" + i + "_name");
		if (port_name != "N/A") {
			ScheduleList.push(port_name);
			ScheduleCount++;
		} else {
			ScheduleList.push("");
		}
	}
}

var pvc_enable = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_en = eval("PVC" + i + "_Enable");
	if (pvc_en != "N/A")
		pvc_enable.push(pvc_en);
	else
		pvc_enable.push("");
}

var pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("PVC" + i + "_active");
	if (pvc_ac != "N/A")
		pvc_active.push(pvc_ac);
	else
		pvc_active.push("");
}

var wan8_pvc_enable = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_en = eval("WAN8_PVC" + i + "_Enable");
	if (pvc_en != "N/A")
		wan8_pvc_enable.push(pvc_en);
	else
		wan8_pvc_enable.push("");
}

var wan8_pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("WAN8_PVC" + i + "_active");
	if (pvc_ac != "N/A")
		wan8_pvc_active.push(pvc_ac);
	else
		wan8_pvc_active.push("");
}

var wan0_pvc_enable = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_en = eval("WAN0_PVC" + i + "_Enable");
	if (pvc_en != "N/A")
		wan0_pvc_enable.push(pvc_en);
	else
		wan0_pvc_enable.push("");
}

var wan0_pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("WAN0_PVC" + i + "_active");
	if (pvc_ac != "N/A")
		wan0_pvc_active.push(pvc_ac);
	else
		wan0_pvc_active.push("");
}

function uiDoOnLoad() {
	var f = document.getElementById("frm");

	if (parseInt(ipFilterListsCount) < parseInt(maxRule)) {
		document.getElementById("createButton").setAttribute("class", "styled_button_s");
		document.getElementById("createButton").disabled = false;
	} else {
		document.getElementById("createButton").setAttribute("class", "styled_button_dis");
		document.getElementById("createButton").disabled = true;
	}

	$("#filter_enable").val(ipfilter_mode);
	$("#filter_enable").selectbox({
		width: 600
	});

	if (f.filter_enable.options[0].selected) {
		$("#createButton").removeClass();
		$("#createButton").addClass("styled_button_dis");
		$("#createButton").attr("disabled", "disabled");
	} else {
		$("#createButton").removeClass();
		$("#createButton").addClass("styled_button_s");
		$("#createButton").removeAttr("disabled");
	}

	$("#filter_enable").change(function() {
		var filter_enable = "disable";
		if (f.filter_enable.options[0].selected)
			filter_enable = "disable";
		else if (f.filter_enable.options[1].selected)
			filter_enable = "white";
		else if (f.filter_enable.options[2].selected)
			filter_enable = "black";

		$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
			setTimeout('$.post("/cgi-bin/New_GUI/Set/IpFilter.asp", { sessionKey: "' + sessionKey + '", filter_enable: "' + filter_enable + '" }, function(){self.location.href = self.location.href;});', 300);
		});
	});

	getInterface();
	$("#inter").selectbox();

	var selectSchedule = document.getElementById("pf_Schedule");
	for (var i = 0; i < maxScheduleRule; i++) {
		if (ScheduleList[i] != "")
			selectSchedule.options.add(new Option(ScheduleList[i], ScheduleList[i]));
	}
	$("#pf_Schedule").selectbox();
}

function getInterface() {
	var f = document.getElementById("inter");
	for (var i = 0; i < max_length; i++) {
		if (pvc_active[i] == "Yes" && pvc_enable[i] == "Enable") {
			f.options.add(new Option("PVC" + (i + 1), "PVC" + i));
		}
	}

	f.options.add(new Option("PTM", "PVC8"));
	// f.options.add(new Option("WAN", "PVC10"));
}

function ip_control(n) {
	var f = document.getElementById("frm");
	if (parseInt(n) == 0) {
		siptype0.setAttribute("class", "clicked");
		siptype1.setAttribute("class", "unclick");
		siptype2.setAttribute("class", "unclick");
		f.sstartip.disabled = true;
		f.sendip.disabled = true;
		f.siptype.value = "ANY";
	} else if (parseInt(n) == 1) {
		siptype0.setAttribute("class", "unclick");
		siptype1.setAttribute("class", "clicked");
		siptype2.setAttribute("class", "unclick");
		f.sstartip.disabled = false;
		f.sendip.disabled = true;
		f.siptype.value = "SINGLE";
	} else if (parseInt(n) == 2) {
		siptype0.setAttribute("class", "unclick");
		siptype1.setAttribute("class", "unclick");
		siptype2.setAttribute("class", "clicked");
		f.sstartip.disabled = false;
		f.sendip.disabled = false;
		f.siptype.value = "RANGE";
	}
}

function dip_control(n) {
	var f = document.getElementById("frm");
	if (parseInt(n) == 0) {
		diptype0.setAttribute("class", "clicked");
		diptype1.setAttribute("class", "unclick");
		diptype2.setAttribute("class", "unclick");
		f.dstartip.disabled = true;
		f.dendip.disabled = true;
		f.diptype.value = "ANY";
	} else if (parseInt(n) == 1) {
		diptype0.setAttribute("class", "unclick");
		diptype1.setAttribute("class", "clicked");
		diptype2.setAttribute("class", "unclick");
		f.dstartip.disabled = false;
		f.dendip.disabled = true;
		f.diptype.value = "SINGLE";
	} else if (parseInt(n) == 2) {
		diptype0.setAttribute("class", "unclick");
		diptype1.setAttribute("class", "unclick");
		diptype2.setAttribute("class", "clicked");
		f.dstartip.disabled = false;
		f.dendip.disabled = false;
		f.diptype.value = "RANGE";
	}
}

function port_control(n) {
	var f = document.getElementById("frm");
	if (parseInt(n) == 0) {
		dporttype0.setAttribute("class", "clicked");
		dporttype1.setAttribute("class", "unclick");
		dporttype2.setAttribute("class", "unclick");
		f.dstartport.disabled = true;
		f.dendport.disabled = true;
		f.dporttype.value = "ANY";
	} else if (parseInt(n) == 1) {
		dporttype0.setAttribute("class", "unclick");
		dporttype1.setAttribute("class", "clicked");
		dporttype2.setAttribute("class", "unclick");
		f.dstartport.disabled = false;
		f.dendport.disabled = true;
		f.dporttype.value = "SINGLE";
	} else if (parseInt(n) == 2) {
		dporttype0.setAttribute("class", "unclick");
		dporttype1.setAttribute("class", "unclick");
		dporttype2.setAttribute("class", "clicked");
		f.dstartport.disabled = false;
		f.dendport.disabled = false;
		f.dporttype.value = "RANGE";
	}
}

function protocol_control() {
	var f = document.getElementById("frm");
	if ((f.protocol.value == "ANY") || (f.protocol.value == "icmp")) {
		document.getElementById("port_one").style.display = "none";
		document.getElementById("port_two").style.display = "none";
		document.getElementById("port_three").style.display = "none";
		document.getElementById("port_four").style.display = "none";
		document.getElementById("port_five").style.display = "none";
	} else {
		document.getElementById("port_one").style.display = "";
		document.getElementById("port_two").style.display = "";
		document.getElementById("port_three").style.display = "";
		document.getElementById("port_four").style.display = "";
		document.getElementById("port_five").style.display = "";
		port_control(0);
	}
}

function ChangeInterface(sVal) {
	var f = document.getElementById("frm");
	var strSelect = "<select style='width: 150px' name='service' id='service'>";
	if (f.inter.value == "PVC10") {
		document.getElementById("Service_Num").style.display = "";
		for (var i = 0; i < max_length; i++) {
			if (wan0_pvc_active[i] == "Yes" && wan0_pvc_enable[i] == "Enable") {
				strSelect += "<option value='" + i + "'>" + (i + 1) + "</option>";
			}
		}
	} else if (f.inter.value == "PVC8") {
		document.getElementById("Service_Num").style.display = "";
		for (var i = 0; i < max_length; i++) {
			if (wan8_pvc_active[i] == "Yes" && wan8_pvc_enable[i] == "Enable") {
				strSelect += "<option value='" + i + "'>" + (i + 1) + "</option>";
			}
		}
	} else {
		document.getElementById("Service_Num").style.display = "none";
	}
	strSelect += "</select>";
	$("#serviceNum").html(strSelect);

	if (sVal != "")
		$("#service").val(sVal);

	$("#service").selectbox();
}

function gen_table() {
	var f = document.getElementById("frm");
	var str = "";
	var tag = 0;

	if (ipFilterListsCount > 0) {
		for (var i = 0; i < ipFilterList.length; i++) {
			if (ipFilterList[i][0] != "") {
				str += "<tr>";
				//var result=cutstr(ipFilterList[i][0],12);
				str += "<td>" + ipFilterList[i][0] + "</td>";
				str += "<td>" + ipFilterList[i][1].toUpperCase() + "</td>";
				str += "<td>" + (ipFilterList[i][3] == "" ? "anyIP" : ipFilterList[i][3]) + "<br>" + (ipFilterList[i][4] == "" ? "" : ipFilterList[i][4]) + "</td>";
				str += "<td>" + (ipFilterList[i][7] == "" ? "anyIP" : ipFilterList[i][7]) + "(" + (ipFilterList[i][10] == "" ? "anyPort" : ipFilterList[i][10]) + ")" + "<br>" + (ipFilterList[i][8] == "" ? "" : ipFilterList[i][8]) + (ipFilterList[i][11] == "" ? "" : ("(" + ipFilterList[i][11]) + ")") + "</td>";
				str += "<td>" + ipFilterList[i][12] + "</td>";
				str += '<td><img src="/graphic/New_GUI/edit_btn.gif" width=28 height=28 style="cursor:pointer" onclick="EditRow(' + i + ')"/></td>';
				str += '<td>';
				str += '<img src="/graphic/New_GUI/trash.gif" width=41 height=41 style="cursor:pointer" onclick="deleteDate(' + i + ')"/>';
				str += '<input type="hidden" id="enable_' + i + '" name="enable_' + i + '">';
				str += '</td>';
				str += "</tr>";
			}
		}
	}
	document.write(str);
}

function deleteDate(i) {
	var f = document.getElementById("frm");
	var st = eval("f.enable_" + i);
	st.value = 1;

	if (confirm(m_comm_deldesc)) {
		var delCount = 1;
		f.ipfilter_num.value = ipFilterListsCount - delCount;
		f.buttontype.value = "delete";

		document.getElementById("CreatePopAlertMessage").style.display = "inline";
		document.getElementById("waitSettingFinish").style.display = "inline";
		Start_reciprocal_Number_RestoreConfiguration();

		$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
			$("#sessionKey").val(sessionKey);
			setTimeout('$.post("/cgi-bin/New_GUI/IpFilter.asp", $("form").serialize(), function(){save_flag = true;});', 300);
		});
	}
}

function EditRow(r) {
	createEditButton();

	var f = document.getElementById("frm");
	f.editRow.value = r;

	var ipFilter_name = eval("ipfilter" + r + "_name");
	var ipFilter_protocol = eval("ipfilter" + r + "_protocol");
	var ipFilter_sip_type = eval("ipfilter" + r + "_sip_type");
	var ipFilter_sip_from = eval("ipfilter" + r + "_sip_from");
	var ipFilter_sip_to = eval("ipfilter" + r + "_sip_to");
	var ipFilter_interface = eval("ipfilter" + r + "_interface");
	var ipFilter_dip_type = eval("ipfilter" + r + "_dip_type");
	var ipFilter_dip_from = eval("ipfilter" + r + "_dip_from");
	var ipFilter_dip_to = eval("ipfilter" + r + "_dip_to");
	var ipFilter_dport_type = eval("ipfilter" + r + "_dport_type");
	var ipFilter_dport_from = eval("ipfilter" + r + "_dport_from");
	var ipFilter_dport_to = eval("ipfilter" + r + "_dport_to");

	var ipFilter_schedule = eval("ipfilter" + r + "_schedule");

	$("#name").val(decodeSpecialChr(ipFilter_name));
	$("#protocol").val(ipFilter_protocol);
	$("#protocol").selectbox();
	$('#protocol').selectbox('change', $("#protocol").val(), $("#protocol").find('option:selected').text());

	protocol_control();

	if (ipFilter_sip_from != "N/A")
		$("#sstartip").val(ipFilter_sip_from);
	if (ipFilter_sip_to != "N/A")
		$("#sendip").val(ipFilter_sip_to);

	switch (ipFilter_sip_type.toString()) {
		case "ANY":
			siptype0.setAttribute("class", "clicked");
			siptype1.setAttribute("class", "unclick");
			siptype2.setAttribute("class", "unclick");
			ip_control(0);
			break;
		case "SINGLE":
			siptype0.setAttribute("class", "unclick");
			siptype1.setAttribute("class", "clicked");
			siptype2.setAttribute("class", "unclick");
			ip_control(1);
			break;
		case "RANGE":
			siptype0.setAttribute("class", "unclick");
			siptype1.setAttribute("class", "unclick");
			siptype2.setAttribute("class", "clicked");
			ip_control(2);
			break;
		default:
			siptype0.setAttribute("class", "clicked");
			siptype1.setAttribute("class", "unclick");
			siptype2.setAttribute("class", "unclick");
			ip_control(0);
			break;
	}

	var sVal = ipFilter_interface.split("e")[1];
	if (ipFilter_interface.indexOf("PVC10") != -1) {
		$("#inter").val("PVC10");
		$('#inter').selectbox('change', $("#inter").val(), $("#inter").find('option:selected').text());
		ChangeInterface(sVal);
	} else if (ipFilter_interface.indexOf("PVC8") != -1) {
		$("#inter").val("PVC8");
		$('#inter').selectbox('change', $("#inter").val(), $("#inter").find('option:selected').text());
		ChangeInterface(sVal);
	} else {
		$("#inter").val(ipFilter_interface);
		$('#inter').selectbox('change', $("#inter").val(), $("#inter").find('option:selected').text());
		ChangeInterface("");
	}

	switch (ipFilter_dip_type.toString()) {
		case "ANY":
			diptype0.setAttribute("class", "clicked");
			diptype1.setAttribute("class", "unclick");
			diptype2.setAttribute("class", "unclick");
			dip_control(0);
			break;
		case "SINGLE":
			diptype0.setAttribute("class", "unclick");
			diptype1.setAttribute("class", "clicked");
			diptype2.setAttribute("class", "unclick");
			dip_control(1);
			break;
		case "RANGE":
			diptype0.setAttribute("class", "unclick");
			diptype1.setAttribute("class", "unclick");
			diptype2.setAttribute("class", "clicked");
			dip_control(2);
			break;
		default:
			diptype0.setAttribute("class", "clicked");
			diptype1.setAttribute("class", "unclick");
			diptype2.setAttribute("class", "unclick");
			dip_control(0);
			break;
	}
	if (ipFilter_dip_from != "N/A")
		$("#dstartip").val(ipFilter_dip_from);
	if (ipFilter_dip_to != "N/A")
		$("#dendip").val(ipFilter_dip_to);
	dip_control();

	switch (ipFilter_dport_type.toString()) {
		case "ANY":
			dporttype0.setAttribute("class", "clicked");
			dporttype1.setAttribute("class", "unclick");
			dporttype2.setAttribute("class", "unclick");
			port_control(0);
			break;
		case "SINGLE":
			dporttype0.setAttribute("class", "unclick");
			dporttype1.setAttribute("class", "clicked");
			dporttype2.setAttribute("class", "unclick");
			port_control(1);
			break;
		case "RANGE":
			dporttype0.setAttribute("class", "unclick");
			dporttype1.setAttribute("class", "unclick");
			dporttype2.setAttribute("class", "clicked");
			port_control(2);
			break;
		default:
			dporttype0.setAttribute("class", "clicked");
			dporttype1.setAttribute("class", "unclick");
			dporttype2.setAttribute("class", "unclick");
			port_control(0);
			break;
	}

	if (ipFilter_dport_from != "N/A")
		$("#dstartport").val(ipFilter_dport_from);
	if (ipFilter_dport_to != "N/A")
		$("#dendport").val(ipFilter_dport_to);
	port_control();

	if (ipFilter_schedule == "-")
		$("#pf_Schedule").val("Always");
	else
		$("#pf_Schedule").val(ipFilter_schedule);
	$('#pf_Schedule').selectbox('change', $("#pf_Schedule").val(), $("#pf_Schedule").find('option:selected').text());
}

function evalIP(ip) {
	var sIP = ip.split(".");

	for (var i = 0; i < sIP.length; i++)
		sIP[i] = parseInt(sIP[i], 10);

	dIP = sIP[0] + "." + sIP[1] + "." + sIP[2] + "." + sIP[3];
	return dIP;
}

function MathandAbs(ip) {
	var sIP = ip.split(".");
	absip = Math.abs(sIP[0]) + "." + Math.abs(sIP[1]) + "." + Math.abs(sIP[2]) + "." + Math.abs(sIP[3]);
	return absip;
}

function isLanip(value) {
	var f = document.getElementById("frm");
	var lanip, lanip_all;
	var dmzip = MathandAbs(value).split(".");
	var error = 0;

	for (var i = 0; i < 2; i++) {
		lanip_all = eval("lan" + i);
		if (lanip_all == "N/A")
			continue;
		lanip = lanip_all.split(".");
		if ((lanip[0] != dmzip[0]) || (lanip[1] != dmzip[1]) || (lanip[2] != dmzip[2]) || evalIP(value) == lanip_all)
			error++;
	}
	if (error == 2)
		return false;
	else
		return true;
}

function isNumber(n) {
	if (n.length == 0) return false;
	for (var i = 0; i < n.length; i++) {
		if (n.charAt(i) < '0' || n.charAt(i) > '9') return false;
	}
	return true;
}

function checkUsedRule(id) {
	var f = document.getElementById("frm");

	for (var i = 0; i < ipFilterList.length; i++) {
		var errorNo = 0;
		if (id == i)
			continue;
		if (ipFilterList[i][0] == "")
			continue;

		if (f.protocol.value == ipFilterList[i][1])
			errorNo++;

		var siptypeValue = new String();
		if (document.getElementById('siptype0').getAttribute('class') == 'clicked') {
			siptypeValue = "ANY";
		} else if (document.getElementById('siptype1').getAttribute('class') == 'clicked') {
			siptypeValue = "SINGLE";
		} else if (document.getElementById('siptype2').getAttribute('class') == 'clicked') {
			siptypeValue = "RANGE";
		} else {
			siptypeValue = "ANY";
		}

		if (siptypeValue == ipFilterList[i][2])
			errorNo++;

		if (siptypeValue == "ANY") {
			errorNo = errorNo + 2;
		} else if (siptypeValue == "SINGLE") {
			errorNo++;
			if (f.sstartip.value == ipFilterList[i][3])
				errorNo++;
		} else {
			if (f.sstartip.value == ipFilterList[i][3])
				errorNo++;

			if (f.sendip.value == ipFilterList[i][4])
				errorNo++;
		}

		if (f.inter.value != "PVC10" && f.inter.value != "PVC8") {
			if (f.inter.value == ipFilterList[i][5])
				errorNo++;
		} else {
			if (f.inter.value + "e" + f.service.value == ipFilterList[i][5])
				errorNo++;
		}

		var diptypeValue = new String();
		if (document.getElementById('diptype0').getAttribute('class') == 'clicked')
			diptypeValue = "ANY";
		else if (document.getElementById('diptype1').getAttribute('class') == 'clicked')
			diptypeValue = "SINGLE";
		else if (document.getElementById('diptype2').getAttribute('class') == 'clicked')
			diptypeValue = "RANGE";
		else
			diptypeValue = "ANY";

		if (diptypeValue == ipFilterList[i][6])
			errorNo++;

		if (diptypeValue == "ANY") {
			errorNo = errorNo + 2;
		} else if (diptypeValue == "SINGLE") {
			errorNo++;
			if (f.dstartip.value == ipFilterList[i][7])
				errorNo++;
		} else {
			if (f.dstartip.value == ipFilterList[i][7])
				errorNo++;

			if (f.dendip.value == ipFilterList[i][8])
				errorNo++;
		}

		var dporttypeValue = new String();
		if (document.getElementById('dporttype0').getAttribute('class') == 'clicked')
			dporttypeValue = "ANY";
		else if (document.getElementById('dporttype1').getAttribute('class') == 'clicked')
			dporttypeValue = "SINGLE";
		else if (document.getElementById('dporttype2').getAttribute('class') == 'clicked')
			dporttypeValue = "RANGE";
		else
			dporttypeValue = "ANY";
		if (dporttypeValue == ipFilterList[i][9])
			errorNo++;

		if (dporttypeValue == "ANY") {
			errorNo = errorNo + 2;
		} else if (dporttypeValue == "SINGLE") {
			errorNo++;
			if (f.dstartport.value == ipFilterList[i][10])
				errorNo++;
		} else {
			if (f.dstartport.value == ipFilterList[i][10])
				errorNo++;

			if (f.dendport.value == ipFilterList[i][11])
				errorNo++;
		}

		if (f.pf_Schedule.value == ipFilterList[i][12])
			errorNo++;

		if (errorNo == 12)
			return false;
	}

	return true;
}

function is_valid_ip(ipaddr, optional) {
	var ip = get_ip(ipaddr);
	if (optional != 0 && is_blank(ipaddr)) return true;
	if (is_in_range(ip[1], 1, 223) == false) return false;
	if (decstr2int(ip[1]) == 127) return false;
	if (is_in_range(ip[2], 0, 255) == false) return false;
	if (is_in_range(ip[3], 0, 255) == false) return false;
	if (is_in_range(ip[4], 1, 255) == false) return false;
	ip[0] = parseInt(ip[1], [10]) + "." + parseInt(ip[2], [10]) + "." + parseInt(ip[3], [10]) + "." + parseInt(ip[4], [10]);
	if (ip[0] != ipaddr) return false;
	return true;
}

function uiDoValidate() {
	var f = document.getElementById("frm");

	if (f.filter_enable.options[0].selected)
		return true;

	var entry;
	if (f.editRow.value == "-1") {
		for (var i = 0; i < ipFilterList.length; i++) {
			if (ipFilterList[i][0] == "") {
				entry = i;
				break;
			}
		}
	} else {
		entry = f.editRow.value;
	}

	if (f.name.value != "") {
		if (f.name.value.length > 32) {
			$("#name_error").html("<br/>" + m_ipfilter_error1);
			return false;
		}
		if (!isUnsafeChar(f.name.value)) {
			$("#name_error").html("<br/>" + m_ipfilter_error2);
			return false;
		}

		var z = 0;
		for (var i = 0; i < ipFilterList.length; i++) {
			if (entry == i)
				continue;
			if (ipFilterList[i][0] == f.name.value)
				z++;
		}

		if (z != 0) {
			$("#name_error").html("<br/>" + m_ipfilter_error3);
			return false;
		}

		if (document.getElementById('siptype1').getAttribute('class') == 'clicked') {
			if ((!is_valid_ip(f.sstartip.value, 0)) || (!isLanip(f.sstartip.value))) {
				$("#sstartip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}
		}

		if (document.getElementById('siptype2').getAttribute('class') == 'clicked') {
			if ((!is_valid_ip(f.sstartip.value, 0)) || (!isLanip(f.sstartip.value))) {
				$("#sstartip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}

			if ((!is_valid_ip(f.sendip.value, 0)) || (!isLanip(f.sendip.value))) {
				$("#sendip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}

			var sIP = f.sstartip.value.split(".");
			var eIP = f.sendip.value.split(".");
			var sIPValue = parseInt(sIP[0]) * 255 * 255 * 255 + parseInt(sIP[1]) * 255 * 255 + parseInt(sIP[2]) * 255 + parseInt(sIP[3]);
			var eIPValue = parseInt(eIP[0]) * 255 * 255 * 255 + parseInt(eIP[1]) * 255 * 255 + parseInt(eIP[2]) * 255 + parseInt(eIP[3]);
			if ((sIPValue > eIPValue) || (eIPValue == sIPValue)) {
				$("#sstartip_error").html("<br/>" + m_ipfilter_error5);
				return false;
			}
		}

		if (document.getElementById('diptype1').getAttribute('class') == 'clicked') {
			if (!is_valid_ip(f.dstartip.value, 0)) {
				$("#dstartip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}
		}

		if (document.getElementById('diptype2').getAttribute('class') == 'clicked') {
			if (!is_valid_ip(f.dstartip.value, 0)) {
				$("#dstartip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}

			if (!is_valid_ip(f.dendip.value, 0)) {
				$("#dendip_error").html("<br/>" + m_ipfilter_error4);
				return false;
			}

			var dsIP = f.dstartip.value.split(".");
			var deIP = f.dendip.value.split(".");
			var dsIPValue = parseInt(dsIP[0]) * 255 * 255 * 255 + parseInt(dsIP[1]) * 255 * 255 + parseInt(dsIP[2]) * 255 + parseInt(dsIP[3]);
			var deIPValue = parseInt(deIP[0]) * 255 * 255 * 255 + parseInt(deIP[1]) * 255 * 255 + parseInt(deIP[2]) * 255 + parseInt(deIP[3]);
			if ((dsIPValue > deIPValue) || (deIPValue == dsIPValue)) {
				$("#dstartip_error").html("<br/>" + m_ipfilter_error5);
				return false;
			}
		}

		if ((f.protocol.value != "ANY") && (f.protocol.value != "icmp")) {
			if (document.getElementById('dporttype1').getAttribute('class') == 'clicked') {
				if (!isNumber(f.dstartport.value) || parseInt(f.dstartport.value) < 1 || parseInt(f.dstartport.value) > 65535) {
					$("#dstartport_error").html("<br/>" + m_ipfilter_error6);
					return false;
				}
			}

			if (document.getElementById('dporttype2').getAttribute('class') == 'clicked') {
				if (!isNumber(f.dstartport.value) || parseInt(f.dstartport.value) < 1 || parseInt(f.dstartport.value) > 65535) {
					$("#dstartport_error").html("<br/>" + m_ipfilter_error6);
					return false;
				}

				if (!isNumber(f.dendport.value) || parseInt(f.dendport.value) < 1 || parseInt(f.dendport.value) > 65535) {
					$("#dendport_error").html("<br/>" + m_ipfilter_error6);
					return false;
				}

				if ((parseInt(f.dstartport.value) > parseInt(f.dendport.value)) || (parseInt(f.dstartport.value) == parseInt(f.dendport.value))) {
					$("#dstartport_error").html("<br/>" + m_ipfilter_error7);
					return false;
				}
			}
		}

		if (!checkUsedRule(entry)) {
			alert(m_comm_ruleused);
			return false;
		}
	}
	return true;
}

function uiDoSave() {
	$("label[class='error']").html("");
	var f = document.getElementById("frm");

	if (f.filter_enable.options[0].selected)
		f.filter_enables.value = "disable";
	else if (f.filter_enable.options[1].selected)
		f.filter_enables.value = "white";
	else if (f.filter_enable.options[2].selected)
		f.filter_enables.value = "black";
	else
		f.filter_enables.value = "disable";

	if (!uiDoValidate())
		return;

	if (document.getElementById('siptype1').getAttribute('class') == 'clicked') {
		f.siptype.value = "SINGLE";
		f.sendip.value = "";
	} else if (document.getElementById('siptype0').getAttribute('class') == 'clicked') {
		f.siptype.value = "ANY";
		f.sstartip.value = "";
		f.sendip.value = "";
	} else if (document.getElementById('siptype2').getAttribute('class') == 'clicked') {
		f.siptype.value = "RANGE";
	}

	if (document.getElementById('diptype1').getAttribute('class') == 'clicked') {
		f.diptype.value = "SINGLE";
		f.dendip.value = "";
	} else if (document.getElementById('diptype0').getAttribute('class') == 'clicked') {
		f.diptype.value = "ANY";
		f.dstartip.value = "";
		f.dendip.value = "";
	} else if (document.getElementById('diptype2').getAttribute('class') == 'clicked') {
		f.diptype.value = "RANGE";
	}

	if ((f.protocol.value == "tcp") || (f.protocol.value == "udp")) {
		if (document.getElementById('dporttype1').getAttribute('class') == 'clicked') {
			f.dporttype.value = "SINGLE";
			f.dendport.value = "";
		} else if (document.getElementById('dporttype0').getAttribute('class') == 'clicked') {
			f.dporttype.value = "ANY";
			f.dstartport.value = "";
			f.dendport.value = "";
		} else if (document.getElementById('dporttype2').getAttribute('class') == 'clicked') {
			f.dporttype.value = "RANGE";
		}
	} else {
		dporttype0.setAttribute("class", "clicked");
		dporttype1.setAttribute("class", "unclick");
		dporttype2.setAttribute("class", "unclick");
		f.dporttype.value = "ANY";
		f.dstartport.value = "";
		f.dendport.value = "";
	}

	if (f.editRow.value == -1) {
		for (var i = 0; i < ipFilterList.length; i++) {
			if (ipFilterList[i][0] == "") {
				f.editRow.value = i;
				break;
			}
		}
		f.ipfilter_num.value = ipFilterListsCount + 1;
	} else {
		f.ipfilter_num.value = ipFilterListsCount;
	}

	if (f.inter.value != "PVC10" && f.inter.value != "PVC8")
		f.d_interface.value = f.inter.value;
	else
		f.d_interface.value = f.inter.value + "e" + f.service.value;

	if ($("#pf_Schedule").val() == "Always")
		$("#scheduleValue").val('-');
	else
		$("#scheduleValue").val($("#pf_Schedule").val());

	f.buttontype.value = "apply";

	document.getElementById("CreatePopAlertMessage").style.display = "inline";
	document.getElementById("waitSettingFinish").style.display = "inline";
	Start_reciprocal_Number_RestoreConfiguration();

	$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
		$("#sessionKey").val(sessionKey);
		setTimeout('$.post("/cgi-bin/New_GUI/IpFilter.asp", $("form").serialize(), function(){save_flag = true;});', 300);
	});
}

function createEditButton() {
	$("#popTitle").html(m_comm_createnew);
	document.getElementById("createPop").style.display = "inline";
	document.getElementById("createButton").disabled = true;
	$("#frm").val(-1);
}

function createUserButton() {
	$("#popTitle").html(m_comm_createnew);
	document.getElementById("createPop").style.display = "inline";
	document.getElementById("createButton").disabled = true;
	$("#frm").val(-1);

	initPop();
}

function initPop() {
	var f = document.getElementById("frm");
	$("input[type='text']").val('');
	$("#editRow").val('-1');
	ip_control(0);
	dip_control(0);
	port_control(0);
	protocol_control();

	if (f.conn_type.value == "Ethernet") {
		$("#inter").val('PVC10');
	} else if (f.conn_type.value == "PTM") {
		$("#inter").val('PVC8');
	}
	$('#inter').selectbox('change', $("#inter").val(), $("#inter").find('option:selected').text());

	ChangeInterface("");

	$("#protocol").val('0');
	$("#protocol").selectbox();
	$('#protocol').selectbox('change', $("#protocol").val(), $("#protocol").find('option:selected').text());

	$("#pf_Schedule").val('0');
	$('#pf_Schedule').selectbox('change', $("#pf_Schedule").val(), $("#pf_Schedule").find('option:selected').text());

	hideSaveBtn();
}

function resetRulePOP() {
	document.getElementById("createPop").style.display = "none";
}

function check_TotalRule(maxRule, totalRule) {
	var IsFull = maxRule - totalRule;
	document.getElementById("RemainingRules").innerHTML = IsFull;

	if (IsFull == 0) {
		document.getElementById("createButton").setAttribute("class", "styled_button_dis");
		document.getElementById("createButton").disabled = true;
	} else {
		document.getElementById("createButton").setAttribute("class", "styled_button_s");
		document.getElementById("createButton").disabled = false;
	}
}

function clearCreateRulePOP() {
	resetRulePOP();
	$("input[type='text']").val("");
	$("label[class='error']").html("");
	$(':text').prop('className', 'styled-text');
	check_TotalRule(maxRule, ipFilterListsCount);
}

var save_flag = false;
var _ReciprocalNumber = 10;

function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + m_comm_Sec;
		_ReciprocalNumber--;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if (save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}