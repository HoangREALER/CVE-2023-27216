var pvc_IGMPproxy_list = new Array();
var pvc_isp_list = new Array();
var ptm_IGMPproxy_list = new Array();
var ptm_isp_list = new Array();
var eth_IGMPproxy_list = new Array();
var eth_isp_list = new Array();
var pvc_active_list = new Array();
var eth_active_list = new Array();
var ptm_active_list = new Array();
var adsl_status = 0;
var eth_status = 0;
var ptm_status = 0;
var igmpversion = IGMPversion;

var pvc_proxy_list = new Array();
var ptm_proxy_list = new Array();
var eth_proxy_list = new Array();

for (var i = 0; i < 8; i++) {
	var pvc_igmp = eval("pvc" + i + "_IGMPproxy");
	var pvc_isp = eval("pvc" + i + "_isp");
	var pvc_active = eval("pvc" + i + "_active");
	var ptm_igmp = eval("ptm" + i + "_IGMPproxy");
	var ptm_isp = eval("ptm" + i + "_isp");
	var ptm_active = eval("ptm" + i + "_active");
	var eth_igmp = eval("eth" + i + "_IGMPproxy");
	var eth_isp = eval("eth" + i + "_isp");
	var eth_active = eval("eth" + i + "_active");

	if (pvc_igmp != "N/A")
		pvc_IGMPproxy_list.push(pvc_igmp);
	else
		pvc_IGMPproxy_list.push("");

	if (pvc_isp != "N/A")
		pvc_isp_list.push(pvc_isp);
	else
		pvc_isp_list.push("");
	if (pvc_active != "N/A")
		pvc_active_list.push(pvc_active);
	else
		pvc_active_list.push("");

	if (ptm_igmp != "N/A")
		ptm_IGMPproxy_list.push(ptm_igmp);
	else
		ptm_IGMPproxy_list.push("");

	if (ptm_isp != "N/A")
		ptm_isp_list.push(ptm_isp);
	else
		ptm_isp_list.push("");
	if (ptm_active != "N/A")
		ptm_active_list.push(ptm_active);
	else
		ptm_active_list.push("");

	if (eth_igmp != "N/A")
		eth_IGMPproxy_list.push(eth_igmp);
	else
		eth_IGMPproxy_list.push("");

	if (eth_isp != "N/A")
		eth_isp_list.push(eth_isp);
	else
		eth_isp_list.push("");
	if (eth_active != "N/A")
		eth_active_list.push(eth_active);
	else
		eth_active_list.push("");
}

for (var i = 0; i < 8; i++) {
	if (pvc_active_list[i] == "Yes") {
		if (pvc_isp_list[i] != 3)
			adsl_status++;
	}

	if (ptm_active_list[i] == "Yes") {
		if (ptm_isp_list[i] != 3)
			ptm_status++;
	}

	if (eth_active_list[i] == "Yes") {
		if (eth_isp_list[i] != 3)
			eth_status++;
	}
}

function doSubmit() {
	$("#buttonType").val("apply");

	if ($("#supportState_ck").attr("checked"))
		$("#igmpsnoopEnable").val("Yes");
	else
		$("#igmpsnoopEnable").val("No");

	if (physical_type == "Ethernet") {
		if (eth_status != 0) {
			for (var i = 0; i < eth_proxy_list.length; i++) {
				clickProxy(eth_proxy_list[i]);
			}
		}
	} else if (physical_type == "PTM") {
		if (ptm_status != 0) {
			for (var i = 0; i < ptm_proxy_list.length; i++) {
				clickProxy(ptm_proxy_list[i]);
			}
		}
	} else {
		if (adsl_status != 0) {
			for (var i = 0; i < pvc_proxy_list.length; i++) {
				clickProxy(pvc_proxy_list[i]);
			}
		}
	}

	if ($("#igmpversion_ck").attr("checked"))
		$("#igmpVersion").val("2");
	else
		$("#igmpVersion").val("3");

	document.getElementById("CreatePopAlertMessage").style.display = "inline";
	document.getElementById("waitSettingFinish").style.display = "inline";
	Start_reciprocal_Number_RestoreConfiguration();

	$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
		$("#sessionKey").val(sessionKey);
		setTimeout('$.post("/cgi-bin/New_GUI/Igmp.asp", $("form").serialize(), function(){save_flag = true;});', 300);
	});
}

function initIGMP() {

	if (state == "Yes")
		SetCheckBoxEnable("supportState", true, true);
	else
		SetCheckBoxEnable("supportState", true, false);

	if (physical_type == "Ethernet") {
		if (eth_status != 0) {
			document.getElementById("eth_show").style.display = "";
			document.getElementById("eth_show").innerHTML = initETHProxy();
			$("#eth_show div").each(function() {
				$(this).click(function(event) {
					save_button_changed();
					SetCheckBoxEnable($(this).prop("id"));
				});
			});
			document.frm.Wanshowhiddenflag.value = "ethshow";
		} else {
			document.getElementById("eth_show").style.display = "none";
			document.frm.Wanshowhiddenflag.value = "hidden";
		}
	} else if (physical_type == "PTM") {
		if (ptm_status != 0) {
			document.getElementById("ptm_show").style.display = "";
			document.getElementById("ptm_show").innerHTML = initPTMProxy();
			$("#ptm_show div").each(function() {
				$(this).click(function(event) {
					save_button_changed();
					SetCheckBoxEnable($(this).prop("id"));
				});
			});
			document.frm.Wanshowhiddenflag.value = "ptmshow";
		} else {
			document.getElementById("ptm_show").style.display = "none";
			document.frm.Wanshowhiddenflag.value = "hidden";
		}
	} else {
		if (adsl_status != 0) {
			document.frm.Wanshowhiddenflag.value = "adslshow";
			document.getElementById("adsl_show").style.display = "";
			document.getElementById("adsl_show").innerHTML = initPVCProxy();
			$("#adsl_show div").each(function() {
				$(this).click(function(event) {
					save_button_changed();
					SetCheckBoxEnable($(this).prop("id"));
				});
			});
		} else {
			document.getElementById("adsl_show").style.display = "none";
			document.frm.Wanshowhiddenflag.value = "hidden";
		}
	}

	if (igmpversion == "2")
		SetCheckBoxEnable("igmpversion", true, true);
	else
		SetCheckBoxEnable("igmpversion", true, false);

	/*if (igmpversion != "N/A")
		document.getElementById("igmpversion").value = igmpversion;
	else
		document.getElementById("igmpversion").value = "2";*/
}

function initPVCProxy() {
	var notBridge = 0;
	var str = "";

	for (var i = 0; i < pvc_isp_list.length; i++) {
		if (pvc_active_list[i] == "Yes") {
			if (pvc_isp_list[i] != "") {
				if (parseInt(pvc_isp_list[i]) != 3) {
					notBridge++;

					str += "<tr>";
					str += "<th>PVC" + (i + 1) + " " + m_igmp_proxy + ":</th>";

					str += "<td>";
					if (pvc_IGMPproxy_list[i] == "Yes") {
						str += "<div id='pvc_proxy" + i + "' class='checkbox_on'><input type=\"checkbox\" id='pvc_proxy" + i + "_ck' name='pvc_proxy" + i + "_ck' checked=true>" + m_comm_Enable1;
						$("#pvc_proxy" + i + "_ck").prop("checked", true);
					} else {
						str += "<div id='pvc_proxy" + i + "' class='checkbox_off'><input type=\"checkbox\" id='pvc_proxy" + i + "_ck' name='pvc_proxy" + i + "_ck'>" + m_comm_disable1;
						$("#pvc_proxy" + i + "_ck").prop("checked", false);
					}
					str += "</td>";

					str += "</tr>";
					pvc_proxy_list.push("pvc_proxy" + i + "_ck");
				}
			}
		}
	}

	if (notBridge > 0) {
		return str;
	} else {
		return "Null";
	}
}

function initPTMProxy() {
	var notBridge = 0;
	var str = "";

	for (var i = 0; i < ptm_isp_list.length; i++) {
		if (ptm_active_list[i] == "Yes") {
			if (ptm_isp_list[i] != "") {
				if (parseInt(ptm_isp_list[i]) != 3) {
					notBridge++;

					str += "<tr>";
					str += "<th>PTM" + (i + 1) + " " + m_igmp_proxy + ":</th>";

					str += "<td>";
					if (ptm_IGMPproxy_list[i] == "Yes") {
						str += "<div id='ptm_proxy" + i + "' class='checkbox_on'><input type=\"checkbox\" id='ptm_proxy" + i + "_ck' name='ptm_proxy" + i + "_ck' checked=true>" + m_comm_Enable1;
						$("#ptm_proxy" + i + "_ck").prop("checked", true);
					} else {
						str += "<div id='ptm_proxy" + i + "' class='checkbox_off'><input type=\"checkbox\" id='ptm_proxy" + i + "_ck' name='ptm_proxy" + i + "_ck'>" + m_comm_disable1;
						$("#ptm_proxy" + i + "_ck").prop("checked", false);
					}
					str += "</td>";

					str += "</tr>";
					ptm_proxy_list.push("ptm_proxy" + i + "_ck");
				}
			}
		}
	}

	if (notBridge > 0) {
		return str;
	} else {
		return "Null";
	}
}

function initETHProxy() {
	var notBridge = 0;
	var str = "";

	for (var i = 0; i < eth_isp_list.length; i++) {
		if (eth_active_list[i] == "Yes") {
			if (eth_isp_list[i] != "") {
				if (parseInt(eth_isp_list[i]) != 3) {
					notBridge++;

					str += "<tr>";
					str += "<th>ETH" + (i + 1) + " " + m_igmp_proxy + ":</th>";

					str += "<td>";
					if (eth_IGMPproxy_list[i] == "Yes") {
						str += "<div id='eth_proxy" + i + "' class='checkbox_on'><input type=\"checkbox\" id='eth_proxy" + i + "_ck' name='eth_proxy" + i + "_ck' checked=true>" + m_comm_Enable1;
						$("#eth_proxy" + i + "_ck").prop("checked", true);
					} else {
						str += "<div id='eth_proxy" + i + "' class='checkbox_off'><input type=\"checkbox\" id='eth_proxy" + i + "_ck' name='eth_proxy" + i + "_ck'>" + m_comm_disable1;
						$("#eth_proxy" + i + "_ck").prop("checked", false);
					}
					str += "</td>";

					str += "</tr>";
					eth_proxy_list.push("eth_proxy" + i + "_ck");
				}
			}
		}
	}

	if (notBridge > 0) {
		return str;
	} else {
		return "Null";
	}
}

function clickProxy(ProxyName) {
	var f = document.getElementById("frm");
	var strName = ProxyName.substring(0, ProxyName.length - 4) + "_" + ProxyName.substring(ProxyName.length - 4, ProxyName.length - 3);

	if (eval("f." + ProxyName + ".checked"))
		eval("f." + strName).value = "Yes";
	else
		eval("f." + strName).value = "No";
}

function changeSnooping() {
	SetCheckBoxEnable("supportState");
}

function changeVersion() {
	SetCheckBoxEnable("igmpversion");
}

var save_flag = false;
var _ReciprocalNumber = 10;

function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + " Sec";
		_ReciprocalNumber--;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if (save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}