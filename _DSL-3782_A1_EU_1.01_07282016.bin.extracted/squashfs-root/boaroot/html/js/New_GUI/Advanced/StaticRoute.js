var max_length = 8;
var maxRule = 22;
var maxRuleBut = 20;
var statusAction = new Array("", "<font color=blue>Active</font>", "<font color=red>Inactive</font>");
var mask, dest;

var RoutingList = new Array();
var RoutingCount = 0;
var AddRoutingCount = 0;
var pppstatus = 0;
var adsl_ppp_count = 0;
var ptm_ppp_count = 0;
var eth_ppp_count = 0;
var pvc_isp = new Array();
for (var i = 0; i < max_length; i++) {
	var pvcisp = eval("PVC" + i + "_isp");
	if (pvcisp != "N/A")
		pvc_isp.push(pvcisp);
	else
		pvc_isp.push("");
}

var pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("PVC" + i + "_active");
	if (pvc_ac != "N/A")
		pvc_active.push(pvc_ac);
	else
		pvc_active.push("");
}

var wan8_pvc_isp = new Array();
for (var i = 0; i < max_length; i++) {
	var pvcisp = eval("WAN8_PVC" + i + "_isp");
	if (pvcisp != "N/A")
		wan8_pvc_isp.push(pvcisp);
	else
		wan8_pvc_isp.push("");
}

var wan8_pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("WAN8_PVC" + i + "_active");
	if (pvc_ac != "N/A")
		wan8_pvc_active.push(pvc_ac);
	else
		wan8_pvc_active.push("");
}

var wan0_pvc_isp = new Array();
for (var i = 0; i < max_length; i++) {
	var pvcisp = eval("WAN0_PVC" + i + "_isp");
	if (pvcisp != "N/A")
		wan0_pvc_isp.push(pvcisp);
	else
		wan0_pvc_isp.push("");
}

var wan0_pvc_active = new Array();
for (var i = 0; i < max_length; i++) {
	var pvc_ac = eval("WAN0_PVC" + i + "_active");
	if (pvc_ac != "N/A")
		wan0_pvc_active.push(pvc_ac);
	else
		wan0_pvc_active.push("");
}

CountRouting();

function CountRouting() {
	for (var i = 0; i < maxRule; i++) {
		var routing_dstip = eval("routing" + i + "_dstip");
		if (routing_dstip != "N/A") {
			var routing_active = eval("routing" + i + "_active");
			if (routing_active == "N/A")
				routing_active = "";
			var routing_submask = eval("routing" + i + "_submask");
			if (routing_submask == "N/A")
				routing_submask = "";
			var routing_device = eval("routing" + i + "_device");
			if (routing_device == "N/A")
				routing_device = "";
			var routing_gateway = eval("routing" + i + "_gateway");
			if (routing_gateway == "N/A")
				routing_gateway = "";
			var routing_metric = eval("routing" + i + "_metric");
			if (routing_metric == "N/A")
				routing_metric = "";
			RoutingList.push([routing_active, routing_dstip, routing_submask, routing_device, routing_gateway, routing_metric]);
			RoutingCount++;
		} else {
			RoutingList.push(["", "", "", "", "", ""]);
		}
	}
}

function gen_table() {
	if (RoutingCount > 0) {
		var str = new String();
		for (var i = 0; i < RoutingList.length; i++) {
			if (RoutingList[i][1] != "") {
				if (i > 15)
					continue;
				str += "<tr>";
				str += "<td>" + RoutingList[i][1] + "</td>";
				str += "<td>" + RoutingList[i][2] + "</td>";
				var st = "&nbsp;";
				if (RoutingList[i][3] != "") {
					if (RoutingList[i][3].indexOf("PVC10e") == -1 || RoutingList[i][3].indexOf("PVC8e") == -1)
						st = RoutingList[i][3];
				}
				str += "<td>" + st + "</td>";
				str += "<td>" + (RoutingList[i][4] == "" ? "&nbsp;" : RoutingList[i][4]) + "</td>";
				str += "<td>" + RoutingList[i][5] + "</td>";
				if (i > 15) {
					str += '<td>&nbsp;</td>';
					str += '<td>&nbsp;</td>';
				} else {
					AddRoutingCount++;
					str += '<td><img src="/graphic/New_GUI/edit_btn.gif" width=28 height=28 style="cursor:pointer" onclick="EditRow(' + i + ')"/></td>';
					str += '<td>';
					str += '<img src="/graphic/New_GUI/trash.gif" width=41 height=41 style="cursor:pointer" onclick="deleteDate(' + i + ')"/>';
					str += '<input type="hidden" id="enable_' + i + '" name="enable_' + i + '"  value="0">';
					str += '</td>';
				}
				str += "</tr>";
			}
		}

		document.write(str);
	}
}

function deleteDate(i) {
	var f = document.getElementById("frm");
	var st = eval("f.enable_" + i);
	st.value = 1;

	if (confirm(m_comm_deldesc)) {
		$("#buttonType").val("delete");

		document.getElementById("CreatePopAlertMessage").style.display = "inline";
		document.getElementById("waitSettingFinish").style.display = "inline";
		Start_reciprocal_Number_RestoreConfiguration();

		$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
			$("#sessionKey").val(sessionKey);
			setTimeout('$.post("/cgi-bin/New_GUI/StaticRoute.asp", $("form").serialize(), function(){save_flag = true;});', 300);
		});
	}
}

function EditRow(i) {
	createEditButton();

	$("#editRow").val(i);
	$("#destination").val(RoutingList[i][1]);
	$("#netmask").val(RoutingList[i][2]);

	getInterface();
	interfaceshow();

	if (pppstatus == 1) {
		if (RoutingList[i][3] != "") {
			if (RoutingList[i][3].indexOf("nas8") != -1 || RoutingList[i][3].indexOf("ppp8") != -1) {
				$("#Route_PVC_Index").val(8);
				$("#Route_PVC_Index").selectbox({
					width: 100
				});
				$("#Route_PVC_Index").selectbox('change', $("#Route_PVC_Index").val(), $("#Route_PVC_Index").find('option:selected').text());
				ChangeInterface();
				var sernum = "PVC8e" + RoutingList[i][3].split("_")[1];
				$("#Route_Service_Index").val(sernum);
				$("#Route_Service_Index").selectbox('change', $("#Route_Service_Index").val(), $("#Route_Service_Index").find('option:selected').text());
			} else {
				ChangeInterface();
				if (RoutingList[i][3].indexOf("nas") != -1 || RoutingList[i][3].indexOf("ppp") != -1) {
					$("#Route_PVC_Index").val("PVC" + RoutingList[i][3].substring(3, 4));
					$("#Route_PVC_Index").selectbox({
						width: 100
					});
					$("#Route_PVC_Index").selectbox('change', $("#Route_PVC_Index").val(), $("#Route_PVC_Index").find('option:selected').text());
				} else {
					$("#Route_PVC_Index option:first").attr("selected", "selected");
					$("#Route_PVC_Index").selectbox({
						width: 100
					});
				}
			}
			$("#gateway").val("");
			ChangGateWay(1);
		} else {
			$("#gateway").val(RoutingList[i][4]);
			$("#Route_PVC_Index option:first").attr("selected", "selected");
			$("#Route_PVC_Index").selectbox({
				width: 100
			});
			$("#Route_Service_Index").selectbox({
				width: 100
			});
			ChangGateWay(0);
		}
	} else {
		$("#Route_PVC_Index").selectbox({
			width: 100
		});
		$("#Route_Service_Index").selectbox({
			width: 100
		});
		ChangGateWay(0);
		$("#gateway").val(RoutingList[i][4]);
	}
	$("#metric").val(RoutingList[i][5]);
}

function ChangGateWay(tmp) {
	if (parseInt(tmp) == 0) {
		gateRadio0.setAttribute("class", "clicked");
		gateRadio1.setAttribute("class", "unclick");
		$("#gateway").removeAttr("disabled");
		$("#Route_PVC_Index").selectbox("disable");
		$("#Route_Service_Index").selectbox("disable");
	} else if (parseInt(tmp) == 1) {
		gateRadio0.setAttribute("class", "unclick");
		gateRadio1.setAttribute("class", "clicked");
		$("#gateway").attr("disabled", "disabled");
		$("#Route_PVC_Index").selectbox("enable");
		$("#Route_Service_Index").selectbox("enable");
	}
}

function isNumber(n) {
	if (n.length == 0) return false;
	for (var i = 0; i < n.length; i++) {
		if (n.charAt(i) < '0' || n.charAt(i) > '9') return false;
	}
	return true;
}

function uiDoValidate() {
	var entry;
	var net1;
	var net2;

	var i = 0;
	var destIP = true;
	var maskIP = true;
	var gwIP = true;
	var match = true;
	var network_bool = false;

	var ip_mask = $("#destination").val();
	var ipaddr, maskaddr, maskaddr_value, gw;

	if ($("#editRow").val() == "-1")
		entry = -1;
	else
		entry = $("#editRow").val();

	ipaddr = $("#destination").val();
	maskaddr = $("#netmask").val();

	dest = ipaddr;
	mask = maskaddr;
	gw = $("#gateway").val();

	if (isValidIpAddressOnly(dest) == false) {
		destIP = false;
		$("#destination_error").html("<br/>" + m_staroute_error1);
		return false;
	}

	if (isValidSubnetMask(mask) == false && mask != '255.255.255.255') {
		maskIP = false;
		$("#netmask_error").html("<br/>" + _wan_dsl_subnetMask_error);
		return false;
	}

	if (isValidIpAddressSingle(dest) == true) {
		if (is_valid_network_routing(dest, mask)) {
			destIP = false;
			$("#destination_error").html("<br/>" + m_staroute_error1);
			return false;
		}
	} else {
		if (DoValidateIpRangeCheck(dest, mask, "NETWORK") == -3) {
			destIP = false;
			$("#destination_error").html("<br/>" + m_staroute_error1);
			return false;
		}
	}

	if (mask != "255.255.255.255") {
		if (!is_valid_ip2(dest, mask)) {
			destIP = false;
			$("#destination_error").html("<br/>" + m_staroute_error1);
			return false;
		}
	}

	if (document.getElementById('gateRadio0').getAttribute('class') == 'clicked') {
		if (isValidIpAddressOnly(gw) == false) {
			gwIP = false;
			$("#gateway_error").html("<br/>" + m_staroute_invagateway);
			return false;
		}

		if (isIPForAdsl_2(gw) == false) {
			gwIP = false;
			$("#gateway_error").html("<br/>" + m_staroute_invagateway);
			return false;
		}
	}

	net1 = get_network_id(dest, mask);
	if (net1[0] != dest) {
		maskIP = false;
		$("#netmask_error").html("<br/>" + _wan_dsl_subnetMask_error);
		return false;
	}


	var mask_list = mask.split(".");
	var flag_mask = 0;
	for (var o = 0; o < mask_list.length; o++) {
		if (parseInt(mask_list[o]) != 0) {
			flag_mask++;
		}
	}

	if (flag_mask >= 4) {
		if (is_valid_ip(dest, 0) == false) {
			destIP = false;
			$("#destination_error").html("<br/>" + m_staroute_error1);
			return false;
		}
	}

	if (entry != -1) {
		if (dest != RoutingList[$("#editRow").val()][1] || mask != RoutingList[$("#editRow").val()][2])
			network_bool = true;
	} else {
		network_bool = true;
	}

	if (network_bool) {
		for (var i = 0; i < RoutingList; i++) {
			net2 = get_network_id(RoutingList[i][1], RoutingList[i][2]);
			if (net1[0] == net2[0]) {
				$("#destination_error").html("<br/>" + m_staroute_error3);
				return false;
			}
		}
	}

	if (!isNumber($("#metric").val()) || $("#metric").val() > 15 || $("#metric").val() < 0) {
		$("#metric_error").html("<br/>" + m_staroute_error4);
		return false;
	}

	return (destIP & maskIP & gwIP);
}

function uiDoSave() {
	$("label[class='error']").html("");

	if (uiDoValidate() == false)
		return;

	if ($("#editRow").val() == "-1") {
		for (var i = 0; i < RoutingList.length; i++) {
			if (RoutingList[i][1] == "") {
				$("#editRow").val(i);
				break;
			}
		}
	}

	if (document.getElementById('gateRadio0').getAttribute('class') == 'clicked') {
		$("#gateRadio").val("Yes");
	} else
		$("#gateRadio").val("No");

	if ($("#Route_PVC_Index").val().toString() != "8") {
		$("#Route_index").val($("#Route_PVC_Index").val());
	} else {
		$("#Route_index").val($("#Route_Service_Index").val());
	}

	$("#buttonType").val("apply");

	document.getElementById("CreatePopAlertMessage").style.display = "inline";
	document.getElementById("waitSettingFinish").style.display = "inline";
	Start_reciprocal_Number_RestoreConfiguration();

	$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey) {
		$("#sessionKey").val(sessionKey);
		setTimeout('$.post("/cgi-bin/New_GUI/StaticRoute.asp", $("form").serialize(), function(){save_flag = true;});', 300);
	});
}

function uiDoOnLoad() {
	if (AddRoutingCount >= 16) {
		document.getElementById("createButton").setAttribute("class", "styled_button_dis");
		document.getElementById("createButton").disabled = true;
	} else {
		document.getElementById("createButton").setAttribute("class", "styled_button_s");
		document.getElementById("createButton").disabled = false;
	}
}

function interfaceshow() {
	if (pppstatus == 1)
		document.getElementById("routerinterface").style.display = "";
	else
		document.getElementById("routerinterface").style.display = "none";
}

function getInterface() {
	pppstatus = 1;
	var ptmFlag = false;
	for (var i = 0; i < max_length; i++) {
		if (pvc_active[i] == "Yes") {
			$("#Route_PVC_Index").append("<option value='PVC" + i + "'>PVC" + (i + 1) + "</option>");
		}
		if (wan8_pvc_active[i] == "Yes")
			ptmFlag = true;
	}

	if (ptmFlag) {
		$("#Route_PVC_Index").append("<option value='8'>PTM</option>");
	}
}

function ChangeInterface() {
	if (parseInt($("#Route_PVC_Index").val()) == 8) {
		document.getElementById("Span_Route_Service_Index").style.display = "";
		$("#Span_Route_Service_Index").html("<select id=\"Route_Service_Index\" name=\"Route_Service_Index\"></select>");

		for (var i = 0; i < max_length; i++) {
			if (wan8_pvc_active[i] == "Yes")
				$("#Route_Service_Index").append("<option value='PVC8e" + i + "'>" + (i + 1) + "</option>");
		}
		$("#Route_Service_Index").selectbox({
			width: 100
		});
	} else {
		document.getElementById("Span_Route_Service_Index").style.display = "none";
	}
}

function isValidIpAddressOnly(address) {
	var i = 0;

	if (address == '0.0.0.0' || address == '255.255.255.255')
		return false;

	addrParts = address.split('.');
	if (addrParts.length != 4) return false;
	for (i = 0; i < 4; i++) {
		if (isNaN(addrParts[i]) || addrParts[i] == "")
			return false;
		num = parseInt(addrParts[i]);
		if (num < 0 || num > 255)
			return false;
	}
	return true;
}

function isValidSubnetMask(mask) {
	var i = 0,
		num = 0;
	var zeroBitPos = 0,
		oneBitPos = 0;
	var zeroBitExisted = false;
	var c = '';

	for (i = 0; i < mask.length; i++) {
		c = mask.charAt(i);
		if ((c >= '0' && c <= '9') || (c == '.'))
			continue;
		else
			return false;
	}

	if (mask == '0.0.0.0')
		return false;

	maskParts = mask.split('.');
	if (maskParts.length != 4)
		return false; //this part is buggy, an entry of 255.255.255. will not be detected

	//check that every single digit is not blank{
	for (i = 0; i < maskParts.length; i++) {
		if (maskParts[i].length < 1)
			return false;
	}
	//check that every single digit is not blank}

	for (i = 0; i < 4; i++) {
		if (isNaN(maskParts[i]) == true)
			return false;

		num = parseInt(maskParts[i]);
		if (num < 0 || num > 255)
			return false;

		if (zeroBitExisted == true && num != 0)
			return false;

		zeroBitPos = getLeftMostZeroBitPos(num);
		oneBitPos = getRightMostOneBitPos(num);
		if (zeroBitPos < oneBitPos)
			return false;

		if (zeroBitPos < 8)
			zeroBitExisted = true;
	}
	if (parseInt(maskParts[0]) == 0)
		return false;

	if (parseInt(maskParts[3]) >= 255)
		return false;

	return true;
}

function getLeftMostZeroBitPos(num) {
	var i = 0;
	var numArr = [128, 64, 32, 16, 8, 4, 2, 1];

	for (i = 0; i < numArr.length; i++) {
		if ((num & numArr[i]) == 0)
			return i;
	}

	return numArr.length;
}

function getRightMostOneBitPos(num) {
	var i = 0;
	var numArr = [1, 2, 4, 8, 16, 32, 64, 128];

	for (i = 0; i < numArr.length; i++) {
		if (((num & numArr[i]) >> i) == 1)
			return (numArr.length - i - 1);
	}

	return -1;
}

function isValidIpAddressSingle(address) {
	var i = 0;

	addrParts = address.split('.');
	if (addrParts.length != 4) return false;
	for (i = 0; i < 4; i++) {
		if (isNaN(addrParts[i]) || addrParts[i] == "")
			return false;

		if (i == 3) {
			num = parseInt(addrParts[i]);
			if (num <= 255 && num >= 0 && num != 0)
				return true;
			else
				return false;
		}
	}
	return false;
}

var TYPE_NETWORK_ADDRESS = "NETWORK";
var TYPE_IP_ADDRESS = "IP";
var TYPE_BRCAST_ADDRESS = "BROADCAST";

function DoValidateIpRangeCheck(Subnet, Mask, type) {
	var Subadd = Subnet.match("^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$");
	var Maskadd = Mask.match("^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$");

	if (Subadd == null)
		return -1; //"NETWORK_ERROR"

	if (Maskadd == null)
		return -2; //"MASK_ERROR"

	for (i = 0; i < Subnet.length; i++) {
		c = Subnet.charAt(i);
		if ((c >= '0' && c <= '9') || (c == '.'))
			continue;
		else
			return -1; //"NETWORK_ERROR"
	}

	for (i = 0; i < Mask.length; i++) {
		c = Mask.charAt(i);
		if ((c >= '0' && c <= '9') || (c == '.'))
			continue;
		else
			return -2; //"MASK_ERROR"
	}

	var i;
	var error = false;
	var count = 0;

	var snm1a = 255;
	var snm2a = 255;
	var snm3a = 255;
	var snm4a = 255;

	var nw1a = 0;
	var nw2a = 0;
	var nw3a = 0;
	var nw4a = 0;

	var broad1a = 255;
	var broad2a = 255;
	var broad3a = 255;
	var broad4a = 255;

	arrSubadd = Subadd[0].split(".");
	arrMask = Maskadd[0].split(".");

	snm1a = arrMask[0];
	snm2a = arrMask[1];
	snm3a = arrMask[2];
	snm4a = arrMask[3];

	var ck1a = arrSubadd[0];
	var ck2a = arrSubadd[1];
	var ck3a = arrSubadd[2];
	var ck4a = arrSubadd[3];

	nw1a = eval(snm1a & ck1a);
	nw2a = eval(snm2a & ck2a);
	nw3a = eval(snm3a & ck3a);
	nw4a = eval(snm4a & ck4a);

	broad1a = ((nw1a) ^ (~snm1a) & 255);
	broad2a = ((nw2a) ^ (~snm2a) & 255);
	broad3a = ((nw3a) ^ (~snm3a) & 255);
	broad4a = ((nw4a) ^ (~snm4a) & 255);

	if ((type == undefined) || (type == TYPE_IP_ADDRESS)) {
		if ((broad1a == arrSubadd[0]) && (broad2a == arrSubadd[1]) && (broad3a == arrSubadd[2]) && (broad4a == arrSubadd[3]))
			return -2; //"MASK_ERROR"
	} else if (type == TYPE_NETWORK_ADDRESS) {
		var tempIP = nw1a + "." + nw2a + "." + nw3a + "." + nw4a;
		if (tempIP != Subnet)
			return -3; //"NETWORK_MASK_ERROR"
	} else if (type == TYPE_BRCAST_ADDRESS) {
		var tempIP = broad1a + "." + broad2a + "." + broad3a + "." + broad4a;
		if (tempIP != Subnet)
			return -4; //"BRCAST_ERROR"
	}
	return true;
}

function createEditButton() {
	$("#popTitle").html(m_comm_createnew);
	document.getElementById("createPop").style.display = "inline";
	document.getElementById("createButton").disabled = true;
	$("#frm").val(-1);
}

function createUserButton() {
	$("#popTitle").html(m_comm_createnew);
	document.getElementById("createPop").style.display = "inline";
	document.getElementById("createButton").disabled = true;
	$("#frm").val(-1);

	initPop();
}

function initPop() {
	$("input[type='text']").val('');
	$("#editRow").val('-1');
	getInterface();
	interfaceshow();
	if (pppstatus == 1) {
		if ($("#conn_type").val() == "PTM") {
			var tmpidex = $("#Route_PVC_Index option").length - 1;
			if ($('#Route_PVC_Index option:eq(' + tmpidex + ')').val() != 8) {
				$("#Route_PVC_Index option:first").attr("selected", "selected");
			} else {
				$("#Route_PVC_Index").val(8);
			}
		}
		ChangeInterface();
		$("#Route_PVC_Index").selectbox({
			width: 100
		});
		ChangGateWay(0);
	}

	hideSaveBtn();
}

function resetRulePOP() {
	document.getElementById("createPop").style.display = "none";
}

function check_TotalRule(maxRule, totalRule) {
	document.getElementById("RemainingRules").innerHTML = 16 - AddRoutingCount;

	if (AddRoutingCount >= 16) {
		document.getElementById("createButton").setAttribute("class", "styled_button_dis");
		document.getElementById("createButton").disabled = true;
	} else {
		document.getElementById("createButton").setAttribute("class", "styled_button_s");
		document.getElementById("createButton").disabled = false;
	}
}

function clearCreateRulePOP() {
	resetRulePOP();
	$("input[type='text']").val("");
	$("label[class='error']").html("");
	$(':text').prop('className', 'styled-text');
	check_TotalRule(maxRule, RoutingCount);
}

var countNum = 0;
if (RoutingList.length == 0)
	countNum = 10;
else if ((RoutingList.length - 4) <= 0)
	countNum = 10;
else
	countNum = (RoutingList.length - 4) * 10;

if (countNum > 50)
	countNum = 50;
	
var save_flag = false;
var _ReciprocalNumber = countNum;

function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + m_comm_Sec;
		_ReciprocalNumber--;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if (save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}