function initTR069() {
	if(tr069_active == "Yes")
		SetCheckBoxActivate("CWMP_Active", true, true);		
	else
		SetCheckBoxActivate("CWMP_Active", true, false);	

	$("#CWMP_ACSURL").val(decodeSpecialChr(tr069_acsUrl));
	$("#CWMP_ACSUserName").val(decodeSpecialChr(tr069_acsUserName));
	$("#CWMP_ACSPassword").val(decodeSpecialChr(tr069_acsPassword));
		
	if(tr069_conReqPath=="N/A")
		$("#CWMP_ConnectionRequestPath").val("");
	else
		$("#CWMP_ConnectionRequestPath").val(decodeSpecialChr(tr069_conReqPath));

	$("#CWMP_ConnectionRequestUserName").val(decodeSpecialChr(tr069_conReqUserName));
	$("#CWMP_ConnectionRequestPassword").val(decodeSpecialChr(tr069_conReqPassword));
	
	if(tr069_periodActive == "Yes")
		SetCheckBoxActivate("CWMP_PeriodActive", true, true);
	else
		SetCheckBoxActivate("CWMP_PeriodActive", true, false);

	$("#CWMP_PeriodInterval").val(decodeSpecialChr(tr069_periodInterval));
	
	cwmpSwitch();
}

function cwmpSwitch() {	
	if($("#CWMP_Active_ck").attr("checked")) {
		$("input[type='text']").removeAttr("disabled");
		$("input[type='password']").removeAttr("disabled");
		$("#CWMP_ConnectionRequestPath").attr("disabled", "disabled");					
		$("#tPic").show();
		cwmpPeriodSwitch();
	} 
	else {
		$("input[type='text']").attr("disabled", "disabled");
		$("input[type='password']").attr("disabled", "disabled");
		$("#tPic").hide();
	}
}

function cwmpPeriodSwitch() {	
	if($("#CWMP_PeriodActive_ck").attr("checked")){
		$("#CWMP_PeriodInterval").removeAttr("disabled");
	}
	else
		$("#CWMP_PeriodInterval").attr("disabled", "disabled");
}

function doSubmit() {
	
	$("label[class='error']").html("");

	if($("#CWMP_Active_ck").attr("checked")){
		if(!cwmpNumValidCheck())
			return false;
		if(!cwmpStringValidCheck())
			return false;

		$("#CWMP_Active_Value").val("Yes");
	}
	else
		$("#CWMP_Active_Value").val("No");

	if($("#CWMP_PeriodActive_ck").attr("checked"))
		$("#CWMP_PeriodActive_Value").val("Yes");
	else
		$("#CWMP_PeriodActive_Value").val("No");

	$("#buttonType").val("apply");

	document.getElementById("CreatePopAlertMessage").style.display = "inline";
	document.getElementById("waitSettingFinish").style.display = "inline";
	Start_reciprocal_Number_RestoreConfiguration();
	
	$.get("/cgi-bin/get/New_GUI/get_sessionKey.asp", function(sessionKey){
		$("#sessionKey").val(sessionKey);	
		setTimeout('$.post("/cgi-bin/New_GUI/Tr069.asp", $("form").serialize(), function(){save_flag = true;});', 300);
	});
}

function cwmpNumValidCheck() {
	var value1 = $("#CWMP_PeriodInterval").val();
	if(!($("#CWMP_PeriodActive_ck").attr("checked")))
		return true;
	if(!isNumeric(value1)) {
		document.getElementById("CWMP_PeriodInterval_error").innerHTML = "<br/>The periodic interval should be interger!";			
		return false;
	} else {
		if(Number(value1) > 999999 || Number(value1) < 1) {
			document.getElementById("CWMP_PeriodInterval_error").innerHTML = "<br/>The inform interval should be 1-999999!";	
			return false;
		}
	}
	return true;
}

function cwmpStringValidCheck() {
	var value1;
	var value2 = null;
	var url = /^https*:\/\/\w+/;
	var path = /^\/\w+/;

	value1 = $("#CWMP_ACSURL").val();
	if(value1 == "") {
		document.getElementById("CWMP_ACSURL_error").innerHTML = "<br/>ACS URL should not be empty!";	
		return false;
	}

	if(!StringCheck(value1)) {
		document.getElementById("CWMP_ACSURL_error").innerHTML = "<br/>ACS URL should not be have blank character!";
		return false;
 	} else {
		if(StringCheck(value1)) {
			value2 = value1.match(url);
			if(value2 == null) {
				document.getElementById("CWMP_ACSURL_error").innerHTML = "<br/>The format of ACS URL is wrong!";
				return false;
			}
		}
	}	
	return true;
}

function isNumeric(s) {
	var len= s.length;
	var ch;
	if(len==0) return false;
	for( i=0; i< len; i++) {
		ch= s.charAt(i);
		if( ch > '9' || ch < '0')
			return false;
	}
	return true;
}

function StringCheck(val) {
	var re = /^[^\s]+$/;
	if( re.test(val) )
		return true;
	else
		return false;
}

var save_flag = false;
var _ReciprocalNumber = 10;
function Start_reciprocal_Number_RestoreConfiguration() {
	if (_ReciprocalNumber >= 0) {
		document.getElementById("reciprocal_Number").innerHTML = _ReciprocalNumber + " Sec";
		_ReciprocalNumber --;
		setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
	} else {
		if(save_flag) {
			document.getElementById("waitSettingFinish").style.display = "none";
			document.getElementById("SuccessSettings").style.display = "inline";
		} else {
			setTimeout("Start_reciprocal_Number_RestoreConfiguration()", 1000);
		}
	}
}

function changeCwmp(){
	SetCheckBoxActivate("CWMP_Active");

	cwmpSwitch();
}

function changePI(){
	SetCheckBoxActivate("CWMP_PeriodActive");

	cwmpPeriodSwitch();
}
